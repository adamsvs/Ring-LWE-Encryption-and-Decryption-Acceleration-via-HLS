// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module inv_ntt2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        a_address0,
        a_ce0,
        a_we0,
        a_d0,
        a_q0
);

parameter    ap_ST_fsm_state1 = 31'd1;
parameter    ap_ST_fsm_state2 = 31'd2;
parameter    ap_ST_fsm_state3 = 31'd4;
parameter    ap_ST_fsm_state4 = 31'd8;
parameter    ap_ST_fsm_state5 = 31'd16;
parameter    ap_ST_fsm_state6 = 31'd32;
parameter    ap_ST_fsm_state7 = 31'd64;
parameter    ap_ST_fsm_state8 = 31'd128;
parameter    ap_ST_fsm_state9 = 31'd256;
parameter    ap_ST_fsm_state10 = 31'd512;
parameter    ap_ST_fsm_state11 = 31'd1024;
parameter    ap_ST_fsm_state12 = 31'd2048;
parameter    ap_ST_fsm_state13 = 31'd4096;
parameter    ap_ST_fsm_state14 = 31'd8192;
parameter    ap_ST_fsm_state15 = 31'd16384;
parameter    ap_ST_fsm_state16 = 31'd32768;
parameter    ap_ST_fsm_state17 = 31'd65536;
parameter    ap_ST_fsm_state18 = 31'd131072;
parameter    ap_ST_fsm_state19 = 31'd262144;
parameter    ap_ST_fsm_state20 = 31'd524288;
parameter    ap_ST_fsm_state21 = 31'd1048576;
parameter    ap_ST_fsm_pp1_stage0 = 31'd2097152;
parameter    ap_ST_fsm_pp1_stage1 = 31'd4194304;
parameter    ap_ST_fsm_pp1_stage2 = 31'd8388608;
parameter    ap_ST_fsm_pp1_stage3 = 31'd16777216;
parameter    ap_ST_fsm_state34 = 31'd33554432;
parameter    ap_ST_fsm_pp2_stage0 = 31'd67108864;
parameter    ap_ST_fsm_pp2_stage1 = 31'd134217728;
parameter    ap_ST_fsm_pp2_stage2 = 31'd268435456;
parameter    ap_ST_fsm_pp2_stage3 = 31'd536870912;
parameter    ap_ST_fsm_state47 = 31'd1073741824;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [7:0] a_address0;
output   a_ce0;
output   a_we0;
output  [15:0] a_d0;
input  [15:0] a_q0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[7:0] a_address0;
reg a_ce0;
reg a_we0;
reg[15:0] a_d0;

(* fsm_encoding = "none" *) reg   [30:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [14:0] omega_1_reg_227;
reg   [8:0] j_1_reg_238;
reg   [14:0] omega_2_reg_250;
reg   [8:0] j_2_reg_261;
reg   [14:0] omega2_reg_273;
wire   [14:0] grp_mod_r_fu_284_ap_return;
reg   [14:0] reg_294;
wire    ap_CS_fsm_state21;
wire    ap_CS_fsm_pp1_stage1;
reg    ap_enable_reg_pp1_iter1;
wire    ap_block_state23_pp1_stage1_iter0;
wire    ap_block_state27_pp1_stage1_iter1;
wire    ap_block_state31_pp1_stage1_iter2;
wire    ap_block_pp1_stage1_11001;
reg   [0:0] tmp_106_reg_1091;
reg   [0:0] ap_reg_pp1_iter1_tmp_106_reg_1091;
wire    ap_CS_fsm_pp2_stage0;
reg    ap_enable_reg_pp2_iter1;
wire    ap_block_state35_pp2_stage0_iter0;
wire    ap_block_state39_pp2_stage0_iter1;
wire    ap_block_state43_pp2_stage0_iter2;
wire    ap_block_pp2_stage0_11001;
reg   [0:0] tmp_110_reg_1160;
wire   [14:0] grp_mod_r_fu_289_ap_return;
reg   [14:0] reg_300;
wire    ap_CS_fsm_pp2_stage1;
reg    ap_enable_reg_pp2_iter2;
wire    ap_block_state36_pp2_stage1_iter0;
wire    ap_block_state40_pp2_stage1_iter1;
wire    ap_block_state44_pp2_stage1_iter2;
wire    ap_block_pp2_stage1_11001;
reg   [0:0] ap_reg_pp2_iter2_tmp_110_reg_1160;
wire    ap_CS_fsm_pp2_stage2;
wire    ap_block_state37_pp2_stage2_iter0;
wire    ap_block_state41_pp2_stage2_iter1;
wire    ap_block_state45_pp2_stage2_iter2;
wire    ap_block_pp2_stage2_11001;
wire   [0:0] tmp_fu_304_p2;
wire    ap_CS_fsm_state2;
wire  signed [31:0] primrt_1_fu_418_p3;
reg  signed [31:0] primrt_1_reg_956;
wire   [31:0] tmp_45_fu_474_p3;
reg   [31:0] tmp_45_reg_962;
wire   [30:0] tmp_105_fu_482_p1;
reg   [30:0] tmp_105_reg_967;
wire   [0:0] tmp_46_fu_494_p2;
wire    ap_CS_fsm_state3;
wire   [30:0] j_6_fu_499_p2;
reg   [30:0] j_6_reg_976;
wire   [31:0] omega4_cast_fu_505_p1;
reg   [31:0] omega4_cast_reg_981;
wire   [31:0] m_1_fu_509_p2;
reg   [7:0] a_addr_8_reg_996;
wire    ap_CS_fsm_state4;
wire   [0:0] icmp_fu_525_p2;
reg   [7:0] a_addr_9_reg_1001;
reg   [7:0] a_addr_10_reg_1006;
reg   [7:0] a_addr_11_reg_1011;
wire   [31:0] k_1_fu_594_p2;
reg   [31:0] k_1_reg_1016;
wire   [31:0] t1_1_fu_894_p2;
reg   [31:0] t1_1_reg_1021;
wire    ap_CS_fsm_state5;
wire   [31:0] t2_fu_899_p2;
reg   [31:0] t2_reg_1026;
wire    ap_CS_fsm_state6;
reg   [15:0] a_load_6_reg_1031;
wire    ap_CS_fsm_state7;
reg   [15:0] a_load_8_reg_1036;
wire    ap_CS_fsm_state8;
wire   [16:0] tmp_73_fu_619_p2;
reg   [16:0] tmp_73_reg_1041;
wire    ap_CS_fsm_state9;
wire   [16:0] tmp_75_fu_625_p2;
reg   [16:0] tmp_75_reg_1046;
wire   [31:0] tmp_116_cast_fu_642_p1;
wire    ap_CS_fsm_state10;
wire   [16:0] tmp_77_fu_646_p2;
reg   [16:0] tmp_77_reg_1056;
wire   [16:0] tmp_79_fu_652_p2;
reg   [16:0] tmp_79_reg_1061;
wire   [31:0] tmp_120_cast_fu_658_p1;
wire    ap_CS_fsm_state11;
wire  signed [31:0] tmp_118_cast_fu_662_p1;
wire    ap_CS_fsm_state12;
wire  signed [31:0] tmp_122_cast_fu_671_p1;
wire    ap_CS_fsm_state13;
wire   [31:0] omega_3_fu_690_p2;
reg   [31:0] omega_3_reg_1081;
wire    ap_CS_fsm_state17;
wire  signed [15:0] omega_1_cast3_fu_694_p1;
reg  signed [15:0] omega_1_cast3_reg_1086;
wire    ap_CS_fsm_pp1_stage0;
wire    ap_block_state22_pp1_stage0_iter0;
wire    ap_block_state26_pp1_stage0_iter1;
wire    ap_block_state30_pp1_stage0_iter2;
wire    ap_block_pp1_stage0_11001;
wire   [0:0] tmp_106_fu_698_p3;
reg   [0:0] ap_reg_pp1_iter2_tmp_106_reg_1091;
reg   [7:0] a_addr_reg_1095;
reg   [7:0] ap_reg_pp1_iter1_a_addr_reg_1095;
reg   [7:0] ap_reg_pp1_iter2_a_addr_reg_1095;
reg   [7:0] a_addr_5_reg_1100;
reg   [7:0] ap_reg_pp1_iter1_a_addr_5_reg_1100;
reg   [7:0] ap_reg_pp1_iter2_a_addr_5_reg_1100;
wire   [28:0] omega_fu_904_p2;
reg   [28:0] omega_reg_1105;
wire   [31:0] t1_fu_910_p2;
reg   [31:0] t1_reg_1110;
wire   [31:0] omega_cast_fu_737_p1;
wire   [8:0] j_3_fu_741_p2;
reg   [8:0] j_3_reg_1120;
wire    ap_CS_fsm_pp1_stage3;
reg    ap_enable_reg_pp1_iter0;
wire    ap_block_state25_pp1_stage3_iter0;
wire    ap_block_state29_pp1_stage3_iter1;
wire    ap_block_state33_pp1_stage3_iter2;
wire    ap_block_pp1_stage3_11001;
wire   [16:0] tmp_52_fu_759_p2;
reg   [16:0] tmp_52_reg_1130;
wire    ap_CS_fsm_pp1_stage2;
wire    ap_block_state24_pp1_stage2_iter0;
wire    ap_block_state28_pp1_stage2_iter1;
wire    ap_block_state32_pp1_stage2_iter2;
wire    ap_block_pp1_stage2_11001;
wire   [16:0] tmp_54_fu_765_p2;
reg   [16:0] tmp_54_reg_1135;
wire   [31:0] tmp_76_cast_fu_771_p1;
wire  signed [31:0] tmp_78_cast_fu_775_p1;
wire  signed [15:0] omega_2_cast2_fu_789_p1;
reg  signed [15:0] omega_2_cast2_reg_1150;
wire  signed [15:0] omega2_cast1_fu_793_p1;
reg  signed [15:0] omega2_cast1_reg_1155;
wire   [0:0] tmp_110_fu_797_p3;
reg   [0:0] ap_reg_pp2_iter1_tmp_110_reg_1160;
wire   [7:0] tmp_112_fu_809_p1;
reg   [7:0] tmp_112_reg_1164;
reg   [7:0] a_addr_6_reg_1169;
reg   [7:0] ap_reg_pp2_iter1_a_addr_6_reg_1169;
reg   [7:0] ap_reg_pp2_iter2_a_addr_6_reg_1169;
wire   [28:0] omega_4_fu_916_p2;
reg   [28:0] omega_4_reg_1174;
wire   [28:0] omega2_1_fu_922_p2;
reg   [28:0] omega2_1_reg_1179;
wire   [31:0] tmp_84_fu_928_p2;
reg   [31:0] tmp_84_reg_1184;
reg   [7:0] a_addr_7_reg_1189;
reg   [7:0] ap_reg_pp2_iter1_a_addr_7_reg_1189;
reg   [7:0] ap_reg_pp2_iter2_a_addr_7_reg_1189;
wire   [31:0] omega_4_cast_fu_839_p1;
wire   [31:0] omega2_1_cast_fu_843_p1;
wire   [31:0] tmp_90_fu_934_p2;
reg   [31:0] tmp_90_reg_1204;
wire   [8:0] j_5_fu_854_p2;
reg   [8:0] j_5_reg_1209;
wire    ap_CS_fsm_pp2_stage3;
reg    ap_enable_reg_pp2_iter0;
wire    ap_block_state38_pp2_stage3_iter0;
wire    ap_block_state42_pp2_stage3_iter1;
wire    ap_block_state46_pp2_stage3_iter2;
wire    ap_block_pp2_stage3_11001;
wire   [29:0] tmp_86_fu_940_p2;
reg   [29:0] tmp_86_reg_1219;
wire   [31:0] tmp_88_cast_fu_868_p1;
wire   [29:0] tmp_92_fu_946_p2;
reg   [29:0] tmp_92_reg_1229;
wire   [31:0] tmp_95_cast_fu_880_p1;
wire    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state22;
wire    ap_block_pp1_stage3_subdone;
reg    ap_enable_reg_pp1_iter2;
wire    ap_CS_fsm_state34;
wire    ap_block_pp2_stage0_subdone;
reg    ap_condition_pp2_exit_iter0_state35;
wire    ap_block_pp2_stage3_subdone;
reg   [31:0] grp_mod_r_fu_284_x;
reg    grp_mod_r_fu_284_ap_ce;
wire    ap_CS_fsm_state14;
wire    ap_CS_fsm_state15;
wire    ap_CS_fsm_state16;
wire    ap_CS_fsm_state18;
wire    ap_CS_fsm_state47;
reg   [31:0] grp_mod_r_fu_289_x;
reg    grp_mod_r_fu_289_ap_ce;
reg   [31:0] primrt_reg_170;
reg   [31:0] m_reg_181;
reg   [14:0] omega4_reg_193;
reg   [30:0] j4_reg_204;
reg   [31:0] k_reg_216;
reg   [14:0] ap_phi_mux_omega_1_phi_fu_231_p4;
wire    ap_block_pp1_stage0;
reg   [8:0] ap_phi_mux_j_1_phi_fu_242_p4;
reg   [14:0] ap_phi_mux_omega_2_phi_fu_254_p4;
wire    ap_block_pp2_stage0;
reg   [8:0] ap_phi_mux_j_2_phi_fu_265_p4;
reg   [14:0] ap_phi_mux_omega2_phi_fu_277_p4;
wire    ap_block_pp1_stage1;
wire    ap_block_pp1_stage2;
wire    ap_block_pp1_stage3;
wire    ap_block_pp2_stage1;
wire    ap_block_pp2_stage2;
wire    ap_block_pp2_stage3;
wire  signed [63:0] tmp_62_fu_555_p1;
wire  signed [63:0] tmp_65_fu_560_p1;
wire  signed [63:0] tmp_69_fu_584_p1;
wire  signed [63:0] tmp_72_fu_589_p1;
wire   [63:0] tmp_48_fu_714_p1;
wire   [63:0] tmp_49_fu_725_p1;
wire   [63:0] tmp_82_fu_817_p1;
wire   [63:0] tmp_88_fu_834_p1;
wire  signed [15:0] p_trunc_ext_fu_666_p1;
wire  signed [15:0] p_trunc22_ext_fu_675_p1;
wire  signed [15:0] p_trunc21_ext_fu_680_p1;
wire  signed [15:0] p_trunc23_ext_fu_685_p1;
wire  signed [15:0] p_trunc24_ext_fu_779_p1;
wire  signed [15:0] p_trunc25_ext_fu_784_p1;
wire  signed [15:0] p_trunc26_ext_fu_884_p1;
wire  signed [15:0] p_trunc27_ext_fu_889_p1;
wire   [0:0] sel_tmp_fu_310_p2;
wire   [0:0] sel_tmp4_fu_330_p2;
wire   [0:0] sel_tmp2_fu_324_p2;
wire   [0:0] tmp_27_fu_344_p2;
wire   [31:0] sel_tmp3_cast_fu_336_p3;
wire   [31:0] sel_tmp1_fu_316_p3;
wire   [0:0] sel_tmp8_fu_364_p2;
wire   [0:0] sel_tmp6_fu_358_p2;
wire   [0:0] tmp_28_fu_378_p2;
wire   [31:0] sel_tmp7_cast_fu_370_p3;
wire   [31:0] sel_tmp5_fu_350_p3;
wire   [0:0] sel_tmp7_fu_398_p2;
wire   [0:0] sel_tmp3_fu_392_p2;
wire   [0:0] tmp_29_fu_412_p2;
wire   [31:0] sel_tmp11_cast_fu_404_p3;
wire   [31:0] sel_tmp9_fu_384_p3;
wire   [31:0] p_neg_fu_434_p2;
wire   [30:0] p_lshr_fu_440_p4;
wire   [31:0] tmp_41_fu_450_p1;
wire   [30:0] p_lshr_f_fu_460_p4;
wire   [0:0] tmp_104_fu_426_p3;
wire   [31:0] p_neg_t_fu_454_p2;
wire   [31:0] tmp_42_fu_470_p1;
wire   [31:0] j4_cast_fu_490_p1;
wire  signed [15:0] omega4_cast4_fu_486_p1;
wire   [24:0] tmp_109_fu_515_p4;
wire   [30:0] tmp_111_fu_531_p1;
wire   [30:0] tmp_58_fu_535_p2;
wire   [31:0] tmp_59_fu_541_p3;
wire   [31:0] tmp_60_fu_549_p2;
wire   [30:0] tmp_66_fu_565_p2;
wire   [31:0] tmp_67_fu_570_p3;
wire   [31:0] tmp_68_fu_578_p2;
wire  signed [15:0] t1_3_trunc_ext_fu_608_p1;
wire   [16:0] u1_1_cast_fu_616_p1;
wire   [16:0] t1_3_cast_fu_612_p1;
wire  signed [15:0] t2_1_trunc_ext_fu_631_p1;
wire   [16:0] u2_cast_fu_639_p1;
wire   [16:0] t2_1_cast_fu_635_p1;
wire   [15:0] omega_3_fu_690_p1;
wire   [7:0] tmp_108_fu_710_p1;
wire   [7:0] j_fu_719_p2;
wire  signed [15:0] t1_1_trunc_ext_fu_751_p1;
wire   [16:0] t1_1_cast_fu_755_p1;
wire   [16:0] u1_cast_fu_747_p1;
wire   [7:0] j_4_fu_829_p2;
wire  signed [15:0] tmp_87_trunc_ext_fu_860_p1;
wire  signed [15:0] tmp_94_trunc_ext_fu_872_p1;
wire   [15:0] t1_1_fu_894_p0;
wire   [15:0] t1_1_fu_894_p1;
wire   [15:0] t2_fu_899_p0;
wire   [15:0] t2_fu_899_p1;
wire   [12:0] omega_fu_904_p0;
wire   [15:0] omega_fu_904_p1;
wire   [15:0] t1_fu_910_p0;
wire   [15:0] t1_fu_910_p1;
wire   [12:0] omega_4_fu_916_p0;
wire   [15:0] omega_4_fu_916_p1;
wire   [12:0] omega2_1_fu_922_p0;
wire   [15:0] omega2_1_fu_922_p1;
wire   [15:0] tmp_84_fu_928_p0;
wire   [15:0] tmp_84_fu_928_p1;
wire   [15:0] tmp_90_fu_934_p0;
wire   [15:0] tmp_90_fu_934_p1;
wire   [13:0] tmp_86_fu_940_p0;
wire   [15:0] tmp_86_fu_940_p1;
wire   [13:0] tmp_92_fu_946_p0;
wire   [15:0] tmp_92_fu_946_p1;
reg   [30:0] ap_NS_fsm;
wire    ap_block_pp1_stage1_subdone;
wire    ap_block_pp1_stage2_subdone;
wire    ap_block_pp2_stage1_subdone;
wire    ap_block_pp2_stage2_subdone;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_idle_pp2;
wire    ap_enable_pp2;
wire   [28:0] omega2_1_fu_922_p10;
wire   [28:0] omega_4_fu_916_p10;
wire   [28:0] omega_fu_904_p10;
wire   [31:0] t1_1_fu_894_p10;
wire   [31:0] t1_fu_910_p00;
wire   [31:0] t1_fu_910_p10;
wire   [31:0] t2_fu_899_p10;
wire   [31:0] tmp_84_fu_928_p00;
wire   [31:0] tmp_84_fu_928_p10;
wire   [29:0] tmp_86_fu_940_p10;
wire   [31:0] tmp_90_fu_934_p00;
wire   [31:0] tmp_90_fu_934_p10;
wire   [29:0] tmp_92_fu_946_p10;

// power-on initialization
initial begin
#0 ap_CS_fsm = 31'd1;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
end

mod_r grp_mod_r_fu_284(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .x(grp_mod_r_fu_284_x),
    .ap_return(grp_mod_r_fu_284_ap_return),
    .ap_ce(grp_mod_r_fu_284_ap_ce)
);

mod_r grp_mod_r_fu_289(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .x(grp_mod_r_fu_289_x),
    .ap_return(grp_mod_r_fu_289_ap_return),
    .ap_ce(grp_mod_r_fu_289_ap_ce)
);

encdec_mul_mul_167jG #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
encdec_mul_mul_167jG_U86(
    .din0(t1_1_fu_894_p0),
    .din1(t1_1_fu_894_p1),
    .dout(t1_1_fu_894_p2)
);

encdec_mul_mul_167jG #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
encdec_mul_mul_167jG_U87(
    .din0(t2_fu_899_p0),
    .din1(t2_fu_899_p1),
    .dout(t2_fu_899_p2)
);

encdec_mul_mul_138jQ #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 29 ))
encdec_mul_mul_138jQ_U88(
    .din0(omega_fu_904_p0),
    .din1(omega_fu_904_p1),
    .dout(omega_fu_904_p2)
);

encdec_mul_mul_167jG #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
encdec_mul_mul_167jG_U89(
    .din0(t1_fu_910_p0),
    .din1(t1_fu_910_p1),
    .dout(t1_fu_910_p2)
);

encdec_mul_mul_138jQ #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 29 ))
encdec_mul_mul_138jQ_U90(
    .din0(omega_4_fu_916_p0),
    .din1(omega_4_fu_916_p1),
    .dout(omega_4_fu_916_p2)
);

encdec_mul_mul_138jQ #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 29 ))
encdec_mul_mul_138jQ_U91(
    .din0(omega2_1_fu_922_p0),
    .din1(omega2_1_fu_922_p1),
    .dout(omega2_1_fu_922_p2)
);

encdec_mul_mul_167jG #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
encdec_mul_mul_167jG_U92(
    .din0(tmp_84_fu_928_p0),
    .din1(tmp_84_fu_928_p1),
    .dout(tmp_84_fu_928_p2)
);

encdec_mul_mul_167jG #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
encdec_mul_mul_167jG_U93(
    .din0(tmp_90_fu_934_p0),
    .din1(tmp_90_fu_934_p1),
    .dout(tmp_90_fu_934_p2)
);

encdec_mul_mul_149j0 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
encdec_mul_mul_149j0_U94(
    .din0(tmp_86_fu_940_p0),
    .din1(tmp_86_fu_940_p1),
    .dout(tmp_86_fu_940_p2)
);

encdec_mul_mul_149j0 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
encdec_mul_mul_149j0_U95(
    .din0(tmp_92_fu_946_p0),
    .din1(tmp_92_fu_946_p1),
    .dout(tmp_92_fu_946_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state22) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if (((tmp_fu_304_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage3_subdone) & (1'b1 == ap_CS_fsm_pp1_stage3))) begin
            if ((1'b1 == ap_condition_pp1_exit_iter0_state22)) begin
                ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state22);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage3_subdone) & (1'b1 == ap_CS_fsm_pp1_stage3))) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end else if (((tmp_fu_304_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp1_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage0_subdone) & (1'b1 == ap_condition_pp2_exit_iter0_state35) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state34)) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage3_subdone) & (1'b1 == ap_CS_fsm_pp2_stage3))) begin
            if ((1'b1 == ap_condition_pp2_exit_iter0_state35)) begin
                ap_enable_reg_pp2_iter1 <= (1'b1 ^ ap_condition_pp2_exit_iter0_state35);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage3_subdone) & (1'b1 == ap_CS_fsm_pp2_stage3))) begin
            ap_enable_reg_pp2_iter2 <= ap_enable_reg_pp2_iter1;
        end else if ((1'b1 == ap_CS_fsm_state34)) begin
            ap_enable_reg_pp2_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        j4_reg_204 <= j_6_reg_976;
    end else if (((1'b1 == ap_CS_fsm_state2) & (tmp_fu_304_p2 == 1'd1))) begin
        j4_reg_204 <= 31'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_fu_304_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        j_1_reg_238 <= 9'd0;
    end else if (((tmp_106_reg_1091 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        j_1_reg_238 <= j_3_reg_1120;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        j_2_reg_261 <= 9'd0;
    end else if (((tmp_110_reg_1160 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        j_2_reg_261 <= j_5_reg_1209;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (tmp_46_fu_494_p2 == 1'd1))) begin
        k_reg_216 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        k_reg_216 <= k_1_reg_1016;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_46_fu_494_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
                m_reg_181[31 : 1] <= m_1_fu_509_p2[31 : 1];
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                m_reg_181[1] <= 1'b1;
        m_reg_181[2] <= 1'b0;
        m_reg_181[3] <= 1'b0;
        m_reg_181[4] <= 1'b0;
        m_reg_181[5] <= 1'b0;
        m_reg_181[6] <= 1'b0;
        m_reg_181[7] <= 1'b0;
        m_reg_181[8] <= 1'b0;
        m_reg_181[9] <= 1'b0;
        m_reg_181[10] <= 1'b0;
        m_reg_181[11] <= 1'b0;
        m_reg_181[12] <= 1'b0;
        m_reg_181[13] <= 1'b0;
        m_reg_181[14] <= 1'b0;
        m_reg_181[15] <= 1'b0;
        m_reg_181[16] <= 1'b0;
        m_reg_181[17] <= 1'b0;
        m_reg_181[18] <= 1'b0;
        m_reg_181[19] <= 1'b0;
        m_reg_181[20] <= 1'b0;
        m_reg_181[21] <= 1'b0;
        m_reg_181[22] <= 1'b0;
        m_reg_181[23] <= 1'b0;
        m_reg_181[24] <= 1'b0;
        m_reg_181[25] <= 1'b0;
        m_reg_181[26] <= 1'b0;
        m_reg_181[27] <= 1'b0;
        m_reg_181[28] <= 1'b0;
        m_reg_181[29] <= 1'b0;
        m_reg_181[30] <= 1'b0;
        m_reg_181[31] <= 1'b0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        omega2_reg_273 <= 15'd3383;
    end else if (((tmp_110_reg_1160 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        omega2_reg_273 <= grp_mod_r_fu_289_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        omega4_reg_193 <= grp_mod_r_fu_284_ap_return;
    end else if (((1'b1 == ap_CS_fsm_state2) & (tmp_fu_304_p2 == 1'd1))) begin
        omega4_reg_193 <= 15'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_fu_304_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        omega_1_reg_227 <= 15'd1;
    end else if (((tmp_106_reg_1091 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        omega_1_reg_227 <= grp_mod_r_fu_284_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        omega_2_reg_250 <= 15'd1;
    end else if (((tmp_110_reg_1160 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        omega_2_reg_250 <= grp_mod_r_fu_284_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_46_fu_494_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        primrt_reg_170 <= primrt_1_reg_956;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        primrt_reg_170 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (icmp_fu_525_p2 == 1'd1))) begin
        a_addr_10_reg_1006[7 : 1] <= tmp_69_fu_584_p1[7 : 1];
        a_addr_11_reg_1011[7 : 1] <= tmp_72_fu_589_p1[7 : 1];
        a_addr_8_reg_996[7 : 1] <= tmp_62_fu_555_p1[7 : 1];
        a_addr_9_reg_1001[7 : 1] <= tmp_65_fu_560_p1[7 : 1];
        k_1_reg_1016 <= k_1_fu_594_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_106_fu_698_p3 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        a_addr_5_reg_1100[7 : 1] <= tmp_49_fu_725_p1[7 : 1];
        a_addr_reg_1095 <= tmp_48_fu_714_p1;
        omega_reg_1105 <= omega_fu_904_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_110_fu_797_p3 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        a_addr_6_reg_1169 <= tmp_82_fu_817_p1;
        omega2_1_reg_1179 <= omega2_1_fu_922_p2;
        omega_4_reg_1174 <= omega_4_fu_916_p2;
        tmp_112_reg_1164 <= tmp_112_fu_809_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_110_reg_1160 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_block_pp2_stage1_11001))) begin
        a_addr_7_reg_1189[7 : 1] <= tmp_88_fu_834_p1[7 : 1];
        tmp_84_reg_1184 <= tmp_84_fu_928_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        a_load_6_reg_1031 <= a_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        a_load_8_reg_1036 <= a_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        ap_reg_pp1_iter1_a_addr_5_reg_1100[7 : 1] <= a_addr_5_reg_1100[7 : 1];
        ap_reg_pp1_iter1_a_addr_reg_1095 <= a_addr_reg_1095;
        ap_reg_pp1_iter1_tmp_106_reg_1091 <= tmp_106_reg_1091;
        ap_reg_pp1_iter2_a_addr_5_reg_1100[7 : 1] <= ap_reg_pp1_iter1_a_addr_5_reg_1100[7 : 1];
        ap_reg_pp1_iter2_a_addr_reg_1095 <= ap_reg_pp1_iter1_a_addr_reg_1095;
        ap_reg_pp1_iter2_tmp_106_reg_1091 <= ap_reg_pp1_iter1_tmp_106_reg_1091;
        omega_1_cast3_reg_1086 <= omega_1_cast3_fu_694_p1;
        tmp_106_reg_1091 <= ap_phi_mux_j_1_phi_fu_242_p4[32'd8];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        ap_reg_pp2_iter1_a_addr_6_reg_1169 <= a_addr_6_reg_1169;
        ap_reg_pp2_iter1_tmp_110_reg_1160 <= tmp_110_reg_1160;
        ap_reg_pp2_iter2_a_addr_6_reg_1169 <= ap_reg_pp2_iter1_a_addr_6_reg_1169;
        ap_reg_pp2_iter2_tmp_110_reg_1160 <= ap_reg_pp2_iter1_tmp_110_reg_1160;
        omega2_cast1_reg_1155 <= omega2_cast1_fu_793_p1;
        omega_2_cast2_reg_1150 <= omega_2_cast2_fu_789_p1;
        tmp_110_reg_1160 <= ap_phi_mux_j_2_phi_fu_265_p4[32'd8];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_block_pp2_stage1_11001))) begin
        ap_reg_pp2_iter1_a_addr_7_reg_1189[7 : 1] <= a_addr_7_reg_1189[7 : 1];
        ap_reg_pp2_iter2_a_addr_7_reg_1189[7 : 1] <= ap_reg_pp2_iter1_a_addr_7_reg_1189[7 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_106_reg_1091 == 1'd0) & (1'b0 == ap_block_pp1_stage3_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage3))) begin
        j_3_reg_1120 <= j_3_fu_741_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_110_reg_1160 == 1'd0) & (1'b0 == ap_block_pp2_stage3_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage3))) begin
        j_5_reg_1209 <= j_5_fu_854_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        j_6_reg_976 <= j_6_fu_499_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (tmp_46_fu_494_p2 == 1'd1))) begin
        omega4_cast_reg_981[15 : 0] <= omega4_cast_fu_505_p1[15 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        omega_3_reg_1081 <= omega_3_fu_690_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (tmp_fu_304_p2 == 1'd1))) begin
        primrt_1_reg_956 <= primrt_1_fu_418_p3;
        tmp_105_reg_967 <= tmp_105_fu_482_p1;
        tmp_45_reg_962 <= tmp_45_fu_474_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state21) | ((ap_reg_pp1_iter1_tmp_106_reg_1091 == 1'd0) & (1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1)) | ((tmp_110_reg_1160 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001)))) begin
        reg_294 <= grp_mod_r_fu_284_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_reg_pp2_iter2_tmp_110_reg_1160 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage2) & (ap_enable_reg_pp2_iter2 == 1'b1) & (1'b0 == ap_block_pp2_stage2_11001)) | ((ap_reg_pp2_iter2_tmp_110_reg_1160 == 1'd0) & (ap_enable_reg_pp2_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_block_pp2_stage1_11001)))) begin
        reg_300 <= grp_mod_r_fu_289_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        t1_1_reg_1021 <= t1_1_fu_894_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_106_reg_1091 == 1'd0) & (1'b0 == ap_block_pp1_stage1_11001) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
        t1_reg_1110 <= t1_fu_910_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        t2_reg_1026 <= t2_fu_899_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp1_iter1_tmp_106_reg_1091 == 1'd0) & (1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2))) begin
        tmp_52_reg_1130 <= tmp_52_fu_759_p2;
        tmp_54_reg_1135 <= tmp_54_fu_765_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        tmp_73_reg_1041 <= tmp_73_fu_619_p2;
        tmp_75_reg_1046 <= tmp_75_fu_625_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        tmp_77_reg_1056 <= tmp_77_fu_646_p2;
        tmp_79_reg_1061 <= tmp_79_fu_652_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp2_iter1_tmp_110_reg_1160 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_block_pp2_stage1_11001))) begin
        tmp_86_reg_1219 <= tmp_86_fu_940_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_110_reg_1160 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage2) & (1'b0 == ap_block_pp2_stage2_11001))) begin
        tmp_90_reg_1204 <= tmp_90_fu_934_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp2_iter1_tmp_110_reg_1160 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage2) & (1'b0 == ap_block_pp2_stage2_11001))) begin
        tmp_92_reg_1229 <= tmp_92_fu_946_p2;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage3) & (1'b1 == ap_CS_fsm_pp2_stage3) & (ap_enable_reg_pp2_iter2 == 1'b1))) begin
        a_address0 = ap_reg_pp2_iter2_a_addr_7_reg_1189;
    end else if (((1'b0 == ap_block_pp2_stage2) & (1'b1 == ap_CS_fsm_pp2_stage2) & (ap_enable_reg_pp2_iter2 == 1'b1))) begin
        a_address0 = ap_reg_pp2_iter2_a_addr_6_reg_1169;
    end else if (((1'b0 == ap_block_pp2_stage1) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1))) begin
        a_address0 = tmp_88_fu_834_p1;
    end else if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        a_address0 = tmp_82_fu_817_p1;
    end else if (((1'b0 == ap_block_pp1_stage3) & (ap_enable_reg_pp1_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage3))) begin
        a_address0 = ap_reg_pp1_iter2_a_addr_5_reg_1100;
    end else if (((1'b0 == ap_block_pp1_stage2) & (ap_enable_reg_pp1_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage2))) begin
        a_address0 = ap_reg_pp1_iter2_a_addr_reg_1095;
    end else if (((1'b0 == ap_block_pp1_stage1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
        a_address0 = ap_reg_pp1_iter1_a_addr_reg_1095;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        a_address0 = tmp_49_fu_725_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        a_address0 = a_addr_8_reg_996;
    end else if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state7))) begin
        a_address0 = a_addr_11_reg_1011;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state6))) begin
        a_address0 = a_addr_9_reg_1001;
    end else if (((1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state5))) begin
        a_address0 = a_addr_10_reg_1006;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        a_address0 = tmp_62_fu_555_p1;
    end else begin
        a_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | ((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1)) | ((1'b0 == ap_block_pp1_stage2_11001) & (ap_enable_reg_pp1_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage2)) | ((1'b0 == ap_block_pp1_stage3_11001) & (ap_enable_reg_pp1_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage3)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp2_stage3_11001) & (1'b1 == ap_CS_fsm_pp2_stage3) & (ap_enable_reg_pp2_iter2 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp2_stage2) & (ap_enable_reg_pp2_iter2 == 1'b1) & (1'b0 == ap_block_pp2_stage2_11001)) | ((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_block_pp2_stage1_11001)) | ((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001)))) begin
        a_ce0 = 1'b1;
    end else begin
        a_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage3) & (1'b1 == ap_CS_fsm_pp2_stage3) & (ap_enable_reg_pp2_iter2 == 1'b1))) begin
        a_d0 = p_trunc27_ext_fu_889_p1;
    end else if (((1'b0 == ap_block_pp2_stage2) & (1'b1 == ap_CS_fsm_pp2_stage2) & (ap_enable_reg_pp2_iter2 == 1'b1))) begin
        a_d0 = p_trunc26_ext_fu_884_p1;
    end else if (((1'b0 == ap_block_pp1_stage3) & (ap_enable_reg_pp1_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage3))) begin
        a_d0 = p_trunc25_ext_fu_784_p1;
    end else if (((1'b0 == ap_block_pp1_stage2) & (ap_enable_reg_pp1_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage2))) begin
        a_d0 = p_trunc24_ext_fu_779_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        a_d0 = p_trunc23_ext_fu_685_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        a_d0 = p_trunc21_ext_fu_680_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        a_d0 = p_trunc22_ext_fu_675_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        a_d0 = p_trunc_ext_fu_666_p1;
    end else begin
        a_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | ((ap_reg_pp1_iter2_tmp_106_reg_1091 == 1'd0) & (1'b0 == ap_block_pp1_stage2_11001) & (ap_enable_reg_pp1_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage2)) | ((ap_reg_pp1_iter2_tmp_106_reg_1091 == 1'd0) & (1'b0 == ap_block_pp1_stage3_11001) & (ap_enable_reg_pp1_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage3)) | ((ap_reg_pp2_iter2_tmp_110_reg_1160 == 1'd0) & (1'b0 == ap_block_pp2_stage3_11001) & (1'b1 == ap_CS_fsm_pp2_stage3) & (ap_enable_reg_pp2_iter2 == 1'b1)) | ((ap_reg_pp2_iter2_tmp_110_reg_1160 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage2) & (ap_enable_reg_pp2_iter2 == 1'b1) & (1'b0 == ap_block_pp2_stage2_11001)))) begin
        a_we0 = 1'b1;
    end else begin
        a_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((tmp_106_fu_698_p3 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state22 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state22 = 1'b0;
    end
end

always @ (*) begin
    if ((tmp_110_fu_797_p3 == 1'd1)) begin
        ap_condition_pp2_exit_iter0_state35 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter0_state35 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state47) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter0 == 1'b0) & (ap_enable_reg_pp2_iter2 == 1'b0) & (ap_enable_reg_pp2_iter1 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_106_reg_1091 == 1'd0) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        ap_phi_mux_j_1_phi_fu_242_p4 = j_3_reg_1120;
    end else begin
        ap_phi_mux_j_1_phi_fu_242_p4 = j_1_reg_238;
    end
end

always @ (*) begin
    if (((tmp_110_reg_1160 == 1'd0) & (1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        ap_phi_mux_j_2_phi_fu_265_p4 = j_5_reg_1209;
    end else begin
        ap_phi_mux_j_2_phi_fu_265_p4 = j_2_reg_261;
    end
end

always @ (*) begin
    if (((tmp_110_reg_1160 == 1'd0) & (1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        ap_phi_mux_omega2_phi_fu_277_p4 = grp_mod_r_fu_289_ap_return;
    end else begin
        ap_phi_mux_omega2_phi_fu_277_p4 = omega2_reg_273;
    end
end

always @ (*) begin
    if (((tmp_106_reg_1091 == 1'd0) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        ap_phi_mux_omega_1_phi_fu_231_p4 = grp_mod_r_fu_284_ap_return;
    end else begin
        ap_phi_mux_omega_1_phi_fu_231_p4 = omega_1_reg_227;
    end
end

always @ (*) begin
    if (((tmp_110_reg_1160 == 1'd0) & (1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        ap_phi_mux_omega_2_phi_fu_254_p4 = grp_mod_r_fu_284_ap_return;
    end else begin
        ap_phi_mux_omega_2_phi_fu_254_p4 = omega_2_reg_250;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state1) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | ((1'b1 == ap_block_pp1_stage1_11001) & (1'b1 == ap_CS_fsm_pp1_stage1)) | ((1'b1 == ap_block_pp2_stage3_11001) & (1'b1 == ap_CS_fsm_pp2_stage3)) | ((1'b1 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2)) | ((1'b1 == ap_block_pp1_stage3_11001) & (1'b1 == ap_CS_fsm_pp1_stage3)) | ((1'b1 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b1 == ap_block_pp2_stage2_11001) & (1'b1 == ap_CS_fsm_pp2_stage2)) | ((1'b1 == ap_block_pp2_stage1_11001) & (1'b1 == ap_CS_fsm_pp2_stage1)) | ((1'b1 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0)))) begin
        grp_mod_r_fu_284_ap_ce = 1'b0;
    end else begin
        grp_mod_r_fu_284_ap_ce = 1'b1;
    end
end

always @ (*) begin
    if (((tmp_110_reg_1160 == 1'd0) & (1'b0 == ap_block_pp2_stage3) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage3))) begin
        grp_mod_r_fu_284_x = tmp_90_reg_1204;
    end else if (((tmp_110_reg_1160 == 1'd0) & (1'b0 == ap_block_pp2_stage2) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage2))) begin
        grp_mod_r_fu_284_x = tmp_84_reg_1184;
    end else if (((tmp_110_reg_1160 == 1'd0) & (1'b0 == ap_block_pp2_stage1) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1))) begin
        grp_mod_r_fu_284_x = omega_4_cast_fu_839_p1;
    end else if (((ap_reg_pp1_iter1_tmp_106_reg_1091 == 1'd0) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        grp_mod_r_fu_284_x = tmp_78_cast_fu_775_p1;
    end else if (((ap_reg_pp1_iter1_tmp_106_reg_1091 == 1'd0) & (1'b0 == ap_block_pp1_stage3) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage3))) begin
        grp_mod_r_fu_284_x = tmp_76_cast_fu_771_p1;
    end else if (((tmp_106_reg_1091 == 1'd0) & (1'b0 == ap_block_pp1_stage2) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        grp_mod_r_fu_284_x = t1_reg_1110;
    end else if (((tmp_106_reg_1091 == 1'd0) & (1'b0 == ap_block_pp1_stage1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        grp_mod_r_fu_284_x = omega_cast_fu_737_p1;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_mod_r_fu_284_x = omega_3_reg_1081;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_mod_r_fu_284_x = tmp_122_cast_fu_671_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_mod_r_fu_284_x = tmp_118_cast_fu_662_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_mod_r_fu_284_x = tmp_120_cast_fu_658_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_mod_r_fu_284_x = tmp_116_cast_fu_642_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_mod_r_fu_284_x = t2_reg_1026;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_mod_r_fu_284_x = t1_1_reg_1021;
    end else begin
        grp_mod_r_fu_284_x = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage3_11001) & (1'b1 == ap_CS_fsm_pp2_stage3)) | ((1'b1 == ap_CS_fsm_pp2_stage2) & (1'b0 == ap_block_pp2_stage2_11001)) | ((1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_block_pp2_stage1_11001)) | ((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001)))) begin
        grp_mod_r_fu_289_ap_ce = 1'b1;
    end else begin
        grp_mod_r_fu_289_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((ap_reg_pp2_iter1_tmp_110_reg_1160 == 1'd0) & (1'b0 == ap_block_pp2_stage3) & (1'b1 == ap_CS_fsm_pp2_stage3) & (ap_enable_reg_pp2_iter1 == 1'b1))) begin
        grp_mod_r_fu_289_x = tmp_95_cast_fu_880_p1;
    end else if (((ap_reg_pp2_iter1_tmp_110_reg_1160 == 1'd0) & (1'b0 == ap_block_pp2_stage2) & (1'b1 == ap_CS_fsm_pp2_stage2) & (ap_enable_reg_pp2_iter1 == 1'b1))) begin
        grp_mod_r_fu_289_x = tmp_88_cast_fu_868_p1;
    end else if (((tmp_110_reg_1160 == 1'd0) & (1'b0 == ap_block_pp2_stage1) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1))) begin
        grp_mod_r_fu_289_x = omega2_1_cast_fu_843_p1;
    end else begin
        grp_mod_r_fu_289_x = 'bx;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((tmp_fu_304_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((tmp_46_fu_494_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (icmp_fu_525_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((ap_enable_reg_pp1_iter1 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter0 == 1'b1) & (tmp_106_fu_698_p3 == 1'd1)) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage1;
            end else if (((ap_enable_reg_pp1_iter1 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter0 == 1'b1) & (tmp_106_fu_698_p3 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state34;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_pp1_stage1 : begin
            if ((1'b0 == ap_block_pp1_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage1;
            end
        end
        ap_ST_fsm_pp1_stage2 : begin
            if ((1'b0 == ap_block_pp1_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage2;
            end
        end
        ap_ST_fsm_pp1_stage3 : begin
            if ((~((ap_enable_reg_pp1_iter1 == 1'b0) & (1'b0 == ap_block_pp1_stage3_subdone) & (ap_enable_reg_pp1_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage3)) & (1'b0 == ap_block_pp1_stage3_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if (((ap_enable_reg_pp1_iter1 == 1'b0) & (1'b0 == ap_block_pp1_stage3_subdone) & (ap_enable_reg_pp1_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage3))) begin
                ap_NS_fsm = ap_ST_fsm_state34;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage3;
            end
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_pp2_stage0;
        end
        ap_ST_fsm_pp2_stage0 : begin
            if ((~((1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter0 == 1'b1) & (tmp_110_fu_797_p3 == 1'd1) & (ap_enable_reg_pp2_iter1 == 1'b0)) & (1'b0 == ap_block_pp2_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage1;
            end else if (((1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter0 == 1'b1) & (tmp_110_fu_797_p3 == 1'd1) & (ap_enable_reg_pp2_iter1 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state47;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_pp2_stage1 : begin
            if ((1'b0 == ap_block_pp2_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage1;
            end
        end
        ap_ST_fsm_pp2_stage2 : begin
            if ((1'b0 == ap_block_pp2_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage2;
            end
        end
        ap_ST_fsm_pp2_stage3 : begin
            if ((~((1'b0 == ap_block_pp2_stage3_subdone) & (1'b1 == ap_CS_fsm_pp2_stage3) & (ap_enable_reg_pp2_iter2 == 1'b1) & (ap_enable_reg_pp2_iter1 == 1'b0)) & (1'b0 == ap_block_pp2_stage3_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if (((1'b0 == ap_block_pp2_stage3_subdone) & (1'b1 == ap_CS_fsm_pp2_stage3) & (ap_enable_reg_pp2_iter2 == 1'b1) & (ap_enable_reg_pp2_iter1 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state47;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage3;
            end
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_pp1_stage1 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_pp1_stage2 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_pp1_stage3 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_pp2_stage1 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_pp2_stage2 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_pp2_stage3 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_state22_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp1_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp1_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp1_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp1_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp1_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp1_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp1_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp1_stage2_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp1_stage3_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp2_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp2_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp2_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp2_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp2_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp2_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp2_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp2_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp2_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp2_stage2_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state46_pp2_stage3_iter2 = ~(1'b1 == 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

assign icmp_fu_525_p2 = (($signed(tmp_109_fu_515_p4) < $signed(25'd1)) ? 1'b1 : 1'b0);

assign j4_cast_fu_490_p1 = j4_reg_204;

assign j_3_fu_741_p2 = (9'd2 + j_1_reg_238);

assign j_4_fu_829_p2 = (tmp_112_reg_1164 | 8'd1);

assign j_5_fu_854_p2 = (9'd2 + j_2_reg_261);

assign j_6_fu_499_p2 = (j4_reg_204 + 31'd1);

assign j_fu_719_p2 = (tmp_108_fu_710_p1 | 8'd1);

assign k_1_fu_594_p2 = (m_reg_181 + k_reg_216);

assign m_1_fu_509_p2 = m_reg_181 << 32'd1;

assign omega2_1_cast_fu_843_p1 = omega2_1_reg_1179;

assign omega2_1_fu_922_p0 = 29'd2481;

assign omega2_1_fu_922_p1 = omega2_1_fu_922_p10;

assign omega2_1_fu_922_p10 = $unsigned(omega2_cast1_fu_793_p1);

assign omega2_cast1_fu_793_p1 = $signed(ap_phi_mux_omega2_phi_fu_277_p4);

assign omega4_cast4_fu_486_p1 = $signed(omega4_reg_193);

assign omega4_cast_fu_505_p1 = $unsigned(omega4_cast4_fu_486_p1);

assign omega_1_cast3_fu_694_p1 = $signed(ap_phi_mux_omega_1_phi_fu_231_p4);

assign omega_2_cast2_fu_789_p1 = $signed(ap_phi_mux_omega_2_phi_fu_254_p4);

assign omega_3_fu_690_p1 = omega4_cast_reg_981;

assign omega_3_fu_690_p2 = ($signed(primrt_1_reg_956) * $signed({{1'b0}, {omega_3_fu_690_p1}}));

assign omega_4_cast_fu_839_p1 = omega_4_reg_1174;

assign omega_4_fu_916_p0 = 29'd2481;

assign omega_4_fu_916_p1 = omega_4_fu_916_p10;

assign omega_4_fu_916_p10 = $unsigned(omega_2_cast2_fu_789_p1);

assign omega_cast_fu_737_p1 = omega_reg_1105;

assign omega_fu_904_p0 = 29'd2880;

assign omega_fu_904_p1 = omega_fu_904_p10;

assign omega_fu_904_p10 = $unsigned(omega_1_cast3_fu_694_p1);

assign p_lshr_f_fu_460_p4 = {{m_reg_181[31:1]}};

assign p_lshr_fu_440_p4 = {{p_neg_fu_434_p2[31:1]}};

assign p_neg_fu_434_p2 = (32'd0 - m_reg_181);

assign p_neg_t_fu_454_p2 = (32'd0 - tmp_41_fu_450_p1);

assign p_trunc21_ext_fu_680_p1 = $signed(grp_mod_r_fu_284_ap_return);

assign p_trunc22_ext_fu_675_p1 = $signed(grp_mod_r_fu_284_ap_return);

assign p_trunc23_ext_fu_685_p1 = $signed(grp_mod_r_fu_284_ap_return);

assign p_trunc24_ext_fu_779_p1 = $signed(grp_mod_r_fu_284_ap_return);

assign p_trunc25_ext_fu_784_p1 = $signed(grp_mod_r_fu_284_ap_return);

assign p_trunc26_ext_fu_884_p1 = $signed(reg_300);

assign p_trunc27_ext_fu_889_p1 = $signed(reg_300);

assign p_trunc_ext_fu_666_p1 = $signed(grp_mod_r_fu_284_ap_return);

assign primrt_1_fu_418_p3 = ((tmp_29_fu_412_p2[0:0] === 1'b1) ? sel_tmp11_cast_fu_404_p3 : sel_tmp9_fu_384_p3);

assign sel_tmp11_cast_fu_404_p3 = ((sel_tmp7_fu_398_p2[0:0] === 1'b1) ? 32'd7680 : 32'd3383);

assign sel_tmp1_fu_316_p3 = ((sel_tmp_fu_310_p2[0:0] === 1'b1) ? 32'd6601 : primrt_reg_170);

assign sel_tmp2_fu_324_p2 = ((m_reg_181 == 32'd64) ? 1'b1 : 1'b0);

assign sel_tmp3_cast_fu_336_p3 = ((sel_tmp4_fu_330_p2[0:0] === 1'b1) ? 32'd7584 : 32'd6569);

assign sel_tmp3_fu_392_p2 = ((m_reg_181 == 32'd4) ? 1'b1 : 1'b0);

assign sel_tmp4_fu_330_p2 = ((m_reg_181 == 32'd32) ? 1'b1 : 1'b0);

assign sel_tmp5_fu_350_p3 = ((tmp_27_fu_344_p2[0:0] === 1'b1) ? sel_tmp3_cast_fu_336_p3 : sel_tmp1_fu_316_p3);

assign sel_tmp6_fu_358_p2 = ((m_reg_181 == 32'd16) ? 1'b1 : 1'b0);

assign sel_tmp7_cast_fu_370_p3 = ((sel_tmp8_fu_364_p2[0:0] === 1'b1) ? 32'd5756 : 32'd1728);

assign sel_tmp7_fu_398_p2 = ((m_reg_181 == 32'd2) ? 1'b1 : 1'b0);

assign sel_tmp8_fu_364_p2 = ((m_reg_181 == 32'd8) ? 1'b1 : 1'b0);

assign sel_tmp9_fu_384_p3 = ((tmp_28_fu_378_p2[0:0] === 1'b1) ? sel_tmp7_cast_fu_370_p3 : sel_tmp5_fu_350_p3);

assign sel_tmp_fu_310_p2 = ((m_reg_181 == 32'd128) ? 1'b1 : 1'b0);

assign t1_1_cast_fu_755_p1 = $unsigned(t1_1_trunc_ext_fu_751_p1);

assign t1_1_fu_894_p0 = omega4_cast_reg_981;

assign t1_1_fu_894_p1 = t1_1_fu_894_p10;

assign t1_1_fu_894_p10 = a_q0;

assign t1_1_trunc_ext_fu_751_p1 = $signed(reg_294);

assign t1_3_cast_fu_612_p1 = $unsigned(t1_3_trunc_ext_fu_608_p1);

assign t1_3_trunc_ext_fu_608_p1 = $signed(grp_mod_r_fu_284_ap_return);

assign t1_fu_910_p0 = t1_fu_910_p00;

assign t1_fu_910_p00 = a_q0;

assign t1_fu_910_p1 = t1_fu_910_p10;

assign t1_fu_910_p10 = $unsigned(omega_1_cast3_reg_1086);

assign t2_1_cast_fu_635_p1 = $unsigned(t2_1_trunc_ext_fu_631_p1);

assign t2_1_trunc_ext_fu_631_p1 = $signed(grp_mod_r_fu_284_ap_return);

assign t2_fu_899_p0 = omega4_cast_reg_981;

assign t2_fu_899_p1 = t2_fu_899_p10;

assign t2_fu_899_p10 = a_q0;

assign tmp_104_fu_426_p3 = m_reg_181[32'd31];

assign tmp_105_fu_482_p1 = tmp_45_fu_474_p3[30:0];

assign tmp_106_fu_698_p3 = ap_phi_mux_j_1_phi_fu_242_p4[32'd8];

assign tmp_108_fu_710_p1 = ap_phi_mux_j_1_phi_fu_242_p4[7:0];

assign tmp_109_fu_515_p4 = {{k_reg_216[31:7]}};

assign tmp_110_fu_797_p3 = ap_phi_mux_j_2_phi_fu_265_p4[32'd8];

assign tmp_111_fu_531_p1 = k_reg_216[30:0];

assign tmp_112_fu_809_p1 = ap_phi_mux_j_2_phi_fu_265_p4[7:0];

assign tmp_116_cast_fu_642_p1 = tmp_73_reg_1041;

assign tmp_118_cast_fu_662_p1 = $signed(tmp_75_reg_1046);

assign tmp_120_cast_fu_658_p1 = tmp_77_reg_1056;

assign tmp_122_cast_fu_671_p1 = $signed(tmp_79_reg_1061);

assign tmp_27_fu_344_p2 = (sel_tmp4_fu_330_p2 | sel_tmp2_fu_324_p2);

assign tmp_28_fu_378_p2 = (sel_tmp8_fu_364_p2 | sel_tmp6_fu_358_p2);

assign tmp_29_fu_412_p2 = (sel_tmp7_fu_398_p2 | sel_tmp3_fu_392_p2);

assign tmp_41_fu_450_p1 = p_lshr_fu_440_p4;

assign tmp_42_fu_470_p1 = p_lshr_f_fu_460_p4;

assign tmp_45_fu_474_p3 = ((tmp_104_fu_426_p3[0:0] === 1'b1) ? p_neg_t_fu_454_p2 : tmp_42_fu_470_p1);

assign tmp_46_fu_494_p2 = (($signed(j4_cast_fu_490_p1) < $signed(tmp_45_reg_962)) ? 1'b1 : 1'b0);

assign tmp_48_fu_714_p1 = ap_phi_mux_j_1_phi_fu_242_p4;

assign tmp_49_fu_725_p1 = j_fu_719_p2;

assign tmp_52_fu_759_p2 = (t1_1_cast_fu_755_p1 + u1_cast_fu_747_p1);

assign tmp_54_fu_765_p2 = (u1_cast_fu_747_p1 - t1_1_cast_fu_755_p1);

assign tmp_58_fu_535_p2 = (j4_reg_204 + tmp_111_fu_531_p1);

assign tmp_59_fu_541_p3 = {{tmp_58_fu_535_p2}, {1'd0}};

assign tmp_60_fu_549_p2 = (tmp_59_fu_541_p3 | 32'd1);

assign tmp_62_fu_555_p1 = $signed(tmp_60_fu_549_p2);

assign tmp_65_fu_560_p1 = $signed(tmp_59_fu_541_p3);

assign tmp_66_fu_565_p2 = (tmp_105_reg_967 + tmp_58_fu_535_p2);

assign tmp_67_fu_570_p3 = {{tmp_66_fu_565_p2}, {1'd0}};

assign tmp_68_fu_578_p2 = (tmp_67_fu_570_p3 | 32'd1);

assign tmp_69_fu_584_p1 = $signed(tmp_68_fu_578_p2);

assign tmp_72_fu_589_p1 = $signed(tmp_67_fu_570_p3);

assign tmp_73_fu_619_p2 = (u1_1_cast_fu_616_p1 + t1_3_cast_fu_612_p1);

assign tmp_75_fu_625_p2 = (u1_1_cast_fu_616_p1 - t1_3_cast_fu_612_p1);

assign tmp_76_cast_fu_771_p1 = tmp_52_reg_1130;

assign tmp_77_fu_646_p2 = (u2_cast_fu_639_p1 + t2_1_cast_fu_635_p1);

assign tmp_78_cast_fu_775_p1 = $signed(tmp_54_reg_1135);

assign tmp_79_fu_652_p2 = (u2_cast_fu_639_p1 - t2_1_cast_fu_635_p1);

assign tmp_82_fu_817_p1 = ap_phi_mux_j_2_phi_fu_265_p4;

assign tmp_84_fu_928_p0 = tmp_84_fu_928_p00;

assign tmp_84_fu_928_p00 = a_q0;

assign tmp_84_fu_928_p1 = tmp_84_fu_928_p10;

assign tmp_84_fu_928_p10 = $unsigned(omega_2_cast2_reg_1150);

assign tmp_86_fu_940_p0 = 30'd7651;

assign tmp_86_fu_940_p1 = tmp_86_fu_940_p10;

assign tmp_86_fu_940_p10 = $unsigned(tmp_87_trunc_ext_fu_860_p1);

assign tmp_87_trunc_ext_fu_860_p1 = $signed(grp_mod_r_fu_284_ap_return);

assign tmp_88_cast_fu_868_p1 = tmp_86_reg_1219;

assign tmp_88_fu_834_p1 = j_4_fu_829_p2;

assign tmp_90_fu_934_p0 = tmp_90_fu_934_p00;

assign tmp_90_fu_934_p00 = a_q0;

assign tmp_90_fu_934_p1 = tmp_90_fu_934_p10;

assign tmp_90_fu_934_p10 = $unsigned(omega2_cast1_reg_1155);

assign tmp_92_fu_946_p0 = 30'd7651;

assign tmp_92_fu_946_p1 = tmp_92_fu_946_p10;

assign tmp_92_fu_946_p10 = $unsigned(tmp_94_trunc_ext_fu_872_p1);

assign tmp_94_trunc_ext_fu_872_p1 = $signed(grp_mod_r_fu_284_ap_return);

assign tmp_95_cast_fu_880_p1 = tmp_92_reg_1229;

assign tmp_fu_304_p2 = (($signed(m_reg_181) < $signed(32'd129)) ? 1'b1 : 1'b0);

assign u1_1_cast_fu_616_p1 = a_load_6_reg_1031;

assign u1_cast_fu_747_p1 = a_q0;

assign u2_cast_fu_639_p1 = a_load_8_reg_1036;

always @ (posedge ap_clk) begin
    omega4_cast_reg_981[31:16] <= 16'b0000000000000000;
    a_addr_8_reg_996[0] <= 1'b1;
    a_addr_9_reg_1001[0] <= 1'b0;
    a_addr_10_reg_1006[0] <= 1'b1;
    a_addr_11_reg_1011[0] <= 1'b0;
    a_addr_5_reg_1100[0] <= 1'b1;
    ap_reg_pp1_iter1_a_addr_5_reg_1100[0] <= 1'b1;
    ap_reg_pp1_iter2_a_addr_5_reg_1100[0] <= 1'b1;
    a_addr_7_reg_1189[0] <= 1'b1;
    ap_reg_pp2_iter1_a_addr_7_reg_1189[0] <= 1'b1;
    ap_reg_pp2_iter2_a_addr_7_reg_1189[0] <= 1'b1;
    m_reg_181[0] <= 1'b0;
end

endmodule //inv_ntt2
