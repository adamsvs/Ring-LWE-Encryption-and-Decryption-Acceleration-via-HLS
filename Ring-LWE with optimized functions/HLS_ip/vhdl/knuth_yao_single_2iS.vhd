-- ==============================================================
-- File generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2017.4
-- Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
-- 
-- ==============================================================

library ieee; 
use ieee.std_logic_1164.all; 
use ieee.std_logic_unsigned.all;

entity knuth_yao_single_2iS_rom is 
    generic(
             dwidth     : integer := 1; 
             awidth     : integer := 7; 
             mem_size    : integer := 109
    ); 
    port (
          addr0      : in std_logic_vector(awidth-1 downto 0); 
          ce0       : in std_logic; 
          q0         : out std_logic_vector(dwidth-1 downto 0);
          clk       : in std_logic
    ); 
end entity; 


architecture rtl of knuth_yao_single_2iS_rom is 

signal addr0_tmp : std_logic_vector(awidth-1 downto 0); 
type mem_array is array (0 to mem_size-1) of std_logic_vector (dwidth-1 downto 0); 
signal mem : mem_array := (
    0 to 1=> "0", 2 => "1", 3 to 4=> "0", 5 => "1", 6 to 8=> "0", 9 => "1", 10 to 12=> "0", 
    13 to 14=> "1", 15 to 17=> "0", 18 => "1", 19 => "0", 20 to 24=> "1", 25 => "0", 26 to 27=> "1", 
    28 to 29=> "0", 30 to 31=> "1", 32 to 33=> "0", 34 to 37=> "1", 38 to 41=> "0", 42 to 43=> "1", 44 to 47=> "0", 
    48 to 50=> "1", 51 => "0", 52 => "1", 53 to 56=> "0", 57 => "1", 58 to 59=> "0", 60 to 62=> "1", 
    63 to 64=> "0", 65 => "1", 66 to 71=> "0", 72 => "1", 73 to 75=> "0", 76 to 78=> "1", 79 => "0", 
    80 to 81=> "1", 82 => "0", 83 => "1", 84 to 86=> "0", 87 to 88=> "1", 89 to 90=> "0", 91 => "1", 
    92 to 93=> "0", 94 to 95=> "1", 96 to 97=> "0", 98 => "1", 99 to 102=> "0", 103 to 104=> "1", 105 to 106=> "0", 
    107 => "1", 108 => "0" );

attribute syn_rom_style : string;
attribute syn_rom_style of mem : signal is "select_rom";
attribute ROM_STYLE : string;
attribute ROM_STYLE of mem : signal is "distributed";

begin 


memory_access_guard_0: process (addr0) 
begin
      addr0_tmp <= addr0;
--synthesis translate_off
      if (CONV_INTEGER(addr0) > mem_size-1) then
           addr0_tmp <= (others => '0');
      else 
           addr0_tmp <= addr0;
      end if;
--synthesis translate_on
end process;

p_rom_access: process (clk)  
begin 
    if (clk'event and clk = '1') then
        if (ce0 = '1') then 
            q0 <= mem(CONV_INTEGER(addr0_tmp)); 
        end if;
    end if;
end process;

end rtl;


Library IEEE;
use IEEE.std_logic_1164.all;

entity knuth_yao_single_2iS is
    generic (
        DataWidth : INTEGER := 1;
        AddressRange : INTEGER := 109;
        AddressWidth : INTEGER := 7);
    port (
        reset : IN STD_LOGIC;
        clk : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR(AddressWidth - 1 DOWNTO 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR(DataWidth - 1 DOWNTO 0));
end entity;

architecture arch of knuth_yao_single_2iS is
    component knuth_yao_single_2iS_rom is
        port (
            clk : IN STD_LOGIC;
            addr0 : IN STD_LOGIC_VECTOR;
            ce0 : IN STD_LOGIC;
            q0 : OUT STD_LOGIC_VECTOR);
    end component;



begin
    knuth_yao_single_2iS_rom_U :  component knuth_yao_single_2iS_rom
    port map (
        clk => clk,
        addr0 => address0,
        ce0 => ce0,
        q0 => q0);

end architecture;


