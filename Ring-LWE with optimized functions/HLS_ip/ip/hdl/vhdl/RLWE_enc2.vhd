-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2017.4
-- Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity RLWE_enc2 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    a_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    a_ce0 : OUT STD_LOGIC;
    a_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    c1_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    c1_ce0 : OUT STD_LOGIC;
    c1_we0 : OUT STD_LOGIC;
    c1_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    c1_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    c2_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    c2_ce0 : OUT STD_LOGIC;
    c2_we0 : OUT STD_LOGIC;
    c2_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    c2_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    m_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_ce0 : OUT STD_LOGIC;
    m_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    p_ce0 : OUT STD_LOGIC;
    p_q0 : IN STD_LOGIC_VECTOR (15 downto 0) );
end;


architecture behav of RLWE_enc2 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000000000001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000000000010";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000000000100";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000000001000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000000010000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000000100000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000001000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000010000000";
    constant ap_ST_fsm_pp1_stage0 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000100000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000001000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000010000000000";
    constant ap_ST_fsm_pp2_stage0 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000100000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (21 downto 0) := "0000000001000000000000";
    constant ap_ST_fsm_pp3_stage0 : STD_LOGIC_VECTOR (21 downto 0) := "0000000010000000000000";
    constant ap_ST_fsm_pp3_stage1 : STD_LOGIC_VECTOR (21 downto 0) := "0000000100000000000000";
    constant ap_ST_fsm_state31 : STD_LOGIC_VECTOR (21 downto 0) := "0000001000000000000000";
    constant ap_ST_fsm_pp4_stage0 : STD_LOGIC_VECTOR (21 downto 0) := "0000010000000000000000";
    constant ap_ST_fsm_state38 : STD_LOGIC_VECTOR (21 downto 0) := "0000100000000000000000";
    constant ap_ST_fsm_pp5_stage0 : STD_LOGIC_VECTOR (21 downto 0) := "0001000000000000000000";
    constant ap_ST_fsm_pp5_stage1 : STD_LOGIC_VECTOR (21 downto 0) := "0010000000000000000000";
    constant ap_ST_fsm_state45 : STD_LOGIC_VECTOR (21 downto 0) := "0100000000000000000000";
    constant ap_ST_fsm_state46 : STD_LOGIC_VECTOR (21 downto 0) := "1000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv9_100 : STD_LOGIC_VECTOR (8 downto 0) := "100000000";
    constant ap_const_lv9_1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_const_lv16_C : STD_LOGIC_VECTOR (15 downto 0) := "0000000000001100";
    constant ap_const_lv16_8 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000001000";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal i_reg_340 : STD_LOGIC_VECTOR (8 downto 0);
    signal j_i_reg_351 : STD_LOGIC_VECTOR (8 downto 0);
    signal j_i7_reg_362 : STD_LOGIC_VECTOR (8 downto 0);
    signal j_i1_reg_373 : STD_LOGIC_VECTOR (8 downto 0);
    signal j_i2_reg_384 : STD_LOGIC_VECTOR (8 downto 0);
    signal j_i3_reg_395 : STD_LOGIC_VECTOR (8 downto 0);
    signal exitcond_fu_567_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_reg_800 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal i_5_fu_573_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal tmp_fu_579_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_reg_809 : STD_LOGIC_VECTOR (63 downto 0);
    signal exitcond_i_fu_603_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i_reg_819 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp1_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage0 : signal is "none";
    signal ap_block_state10_pp1_stage0_iter0 : BOOLEAN;
    signal ap_block_state11_pp1_stage0_iter1 : BOOLEAN;
    signal ap_block_state12_pp1_stage0_iter2 : BOOLEAN;
    signal ap_block_state13_pp1_stage0_iter3 : BOOLEAN;
    signal ap_block_state14_pp1_stage0_iter4 : BOOLEAN;
    signal ap_block_state15_pp1_stage0_iter5 : BOOLEAN;
    signal ap_block_pp1_stage0_11001 : BOOLEAN;
    signal ap_reg_pp1_iter1_exitcond_i_reg_819 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp1_iter2_exitcond_i_reg_819 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp1_iter3_exitcond_i_reg_819 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp1_iter4_exitcond_i_reg_819 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_fu_609_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_enable_reg_pp1_iter0 : STD_LOGIC := '0';
    signal e3_addr_reg_828 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp1_iter1_e3_addr_reg_828 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp1_iter2_e3_addr_reg_828 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp1_iter3_e3_addr_reg_828 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp1_iter4_e3_addr_reg_828 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_176_i_fu_629_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_176_i_reg_839 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_176_i_cast_fu_635_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal exitcond_i8_fu_644_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i8_reg_849 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp2_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp2_stage0 : signal is "none";
    signal ap_block_state18_pp2_stage0_iter0 : BOOLEAN;
    signal ap_block_state19_pp2_stage0_iter1 : BOOLEAN;
    signal ap_block_state20_pp2_stage0_iter2 : BOOLEAN;
    signal ap_block_state21_pp2_stage0_iter3 : BOOLEAN;
    signal ap_block_state22_pp2_stage0_iter4 : BOOLEAN;
    signal ap_block_state23_pp2_stage0_iter5 : BOOLEAN;
    signal ap_block_pp2_stage0_11001 : BOOLEAN;
    signal ap_reg_pp2_iter1_exitcond_i8_reg_849 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp2_iter2_exitcond_i8_reg_849 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp2_iter3_exitcond_i8_reg_849 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp2_iter4_exitcond_i8_reg_849 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_10_fu_650_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_enable_reg_pp2_iter0 : STD_LOGIC := '0';
    signal tmp_i9_fu_656_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_i9_reg_858 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_pp2_iter1_tmp_i9_reg_858 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_pp2_iter2_tmp_i9_reg_858 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_pp2_iter3_tmp_i9_reg_858 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_pp2_iter4_tmp_i9_reg_858 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_173_i_fu_788_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_173_i_reg_873 : STD_LOGIC_VECTOR (31 downto 0);
    signal exitcond_i1_fu_675_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i1_reg_878 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp3_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp3_stage0 : signal is "none";
    signal ap_block_state25_pp3_stage0_iter0 : BOOLEAN;
    signal ap_block_state27_pp3_stage0_iter1 : BOOLEAN;
    signal ap_block_state29_pp3_stage0_iter2 : BOOLEAN;
    signal ap_block_pp3_stage0_11001 : BOOLEAN;
    signal ap_reg_pp3_iter1_exitcond_i1_reg_878 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp3_iter2_exitcond_i1_reg_878 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_11_fu_681_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal j_11_reg_882 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_enable_reg_pp3_iter0 : STD_LOGIC := '0';
    signal c1_addr_3_reg_892 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp3_iter1_c1_addr_3_reg_892 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp3_iter2_c1_addr_3_reg_892 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_177_i1_fu_701_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_177_i1_reg_897 : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_CS_fsm_pp3_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp3_stage1 : signal is "none";
    signal ap_block_state26_pp3_stage1_iter0 : BOOLEAN;
    signal ap_block_state28_pp3_stage1_iter1 : BOOLEAN;
    signal ap_block_state30_pp3_stage1_iter2 : BOOLEAN;
    signal ap_block_pp3_stage1_11001 : BOOLEAN;
    signal tmp_177_i1_cast_fu_707_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal exitcond_i2_fu_716_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i2_reg_907 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp4_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp4_stage0 : signal is "none";
    signal ap_block_state32_pp4_stage0_iter0 : BOOLEAN;
    signal ap_block_state33_pp4_stage0_iter1 : BOOLEAN;
    signal ap_block_state34_pp4_stage0_iter2 : BOOLEAN;
    signal ap_block_state35_pp4_stage0_iter3 : BOOLEAN;
    signal ap_block_state36_pp4_stage0_iter4 : BOOLEAN;
    signal ap_block_state37_pp4_stage0_iter5 : BOOLEAN;
    signal ap_block_pp4_stage0_11001 : BOOLEAN;
    signal ap_reg_pp4_iter1_exitcond_i2_reg_907 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp4_iter2_exitcond_i2_reg_907 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp4_iter3_exitcond_i2_reg_907 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp4_iter4_exitcond_i2_reg_907 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_12_fu_722_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_enable_reg_pp4_iter0 : STD_LOGIC := '0';
    signal tmp_i2_fu_728_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_i2_reg_916 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_pp4_iter1_tmp_i2_reg_916 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_pp4_iter2_tmp_i2_reg_916 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_pp4_iter3_tmp_i2_reg_916 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_pp4_iter4_tmp_i2_reg_916 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_173_i1_fu_794_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_173_i1_reg_931 : STD_LOGIC_VECTOR (31 downto 0);
    signal exitcond_i3_fu_747_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i3_reg_936 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp5_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp5_stage0 : signal is "none";
    signal ap_block_state39_pp5_stage0_iter0 : BOOLEAN;
    signal ap_block_state41_pp5_stage0_iter1 : BOOLEAN;
    signal ap_block_state43_pp5_stage0_iter2 : BOOLEAN;
    signal ap_block_pp5_stage0_11001 : BOOLEAN;
    signal ap_reg_pp5_iter1_exitcond_i3_reg_936 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp5_iter2_exitcond_i3_reg_936 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_13_fu_753_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal j_13_reg_940 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_enable_reg_pp5_iter0 : STD_LOGIC := '0';
    signal c2_addr_1_reg_950 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp5_iter1_c2_addr_1_reg_950 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp5_iter2_c2_addr_1_reg_950 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_177_i2_fu_773_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_177_i2_reg_955 : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_CS_fsm_pp5_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp5_stage1 : signal is "none";
    signal ap_block_state40_pp5_stage1_iter0 : BOOLEAN;
    signal ap_block_state42_pp5_stage1_iter1 : BOOLEAN;
    signal ap_block_state44_pp5_stage1_iter2 : BOOLEAN;
    signal ap_block_pp5_stage1_11001 : BOOLEAN;
    signal tmp_177_i2_cast_fu_779_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state2 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal grp_knuth_yao2_fu_406_ap_done : STD_LOGIC;
    signal ap_block_pp1_stage0_subdone : BOOLEAN;
    signal ap_condition_pp1_exit_iter0_state10 : STD_LOGIC;
    signal ap_enable_reg_pp1_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter5 : STD_LOGIC := '0';
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal grp_fwd_ntt2_fu_529_ap_done : STD_LOGIC;
    signal grp_fwd_ntt2_fu_536_ap_done : STD_LOGIC;
    signal grp_fwd_ntt2_fu_543_ap_done : STD_LOGIC;
    signal ap_block_state17_on_subcall_done : BOOLEAN;
    signal ap_block_pp2_stage0_subdone : BOOLEAN;
    signal ap_condition_pp2_exit_iter0_state18 : STD_LOGIC;
    signal ap_enable_reg_pp2_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter5 : STD_LOGIC := '0';
    signal ap_CS_fsm_state24 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state24 : signal is "none";
    signal ap_block_pp3_stage0_subdone : BOOLEAN;
    signal ap_condition_pp3_exit_iter0_state25 : STD_LOGIC;
    signal ap_enable_reg_pp3_iter1 : STD_LOGIC := '0';
    signal ap_block_pp3_stage1_subdone : BOOLEAN;
    signal ap_enable_reg_pp3_iter2 : STD_LOGIC := '0';
    signal ap_CS_fsm_state31 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state31 : signal is "none";
    signal ap_block_pp4_stage0_subdone : BOOLEAN;
    signal ap_condition_pp4_exit_iter0_state32 : STD_LOGIC;
    signal ap_enable_reg_pp4_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp4_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp4_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp4_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp4_iter5 : STD_LOGIC := '0';
    signal ap_CS_fsm_state38 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state38 : signal is "none";
    signal ap_block_pp5_stage0_subdone : BOOLEAN;
    signal ap_condition_pp5_exit_iter0_state39 : STD_LOGIC;
    signal ap_enable_reg_pp5_iter1 : STD_LOGIC := '0';
    signal ap_block_pp5_stage1_subdone : BOOLEAN;
    signal ap_enable_reg_pp5_iter2 : STD_LOGIC := '0';
    signal e1_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal e1_ce0 : STD_LOGIC;
    signal e1_we0 : STD_LOGIC;
    signal e1_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal e1_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal e1_ce1 : STD_LOGIC;
    signal e1_we1 : STD_LOGIC;
    signal e1_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal e2_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal e2_ce0 : STD_LOGIC;
    signal e2_we0 : STD_LOGIC;
    signal e2_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal e2_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal e2_ce1 : STD_LOGIC;
    signal e2_we1 : STD_LOGIC;
    signal e2_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal e3_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal e3_ce0 : STD_LOGIC;
    signal e3_we0 : STD_LOGIC;
    signal e3_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal e3_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal e3_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal e3_ce1 : STD_LOGIC;
    signal e3_we1 : STD_LOGIC;
    signal e3_d1 : STD_LOGIC_VECTOR (15 downto 0);
    signal e3_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal encoded_m_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal encoded_m_ce0 : STD_LOGIC;
    signal encoded_m_we0 : STD_LOGIC;
    signal encoded_m_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal encoded_m_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_knuth_yao2_fu_406_ap_start : STD_LOGIC;
    signal grp_knuth_yao2_fu_406_ap_idle : STD_LOGIC;
    signal grp_knuth_yao2_fu_406_ap_ready : STD_LOGIC;
    signal grp_knuth_yao2_fu_406_a_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_knuth_yao2_fu_406_a_ce0 : STD_LOGIC;
    signal grp_knuth_yao2_fu_406_a_we0 : STD_LOGIC;
    signal grp_knuth_yao2_fu_406_a_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fwd_ntt2_fu_529_ap_start : STD_LOGIC;
    signal grp_fwd_ntt2_fu_529_ap_idle : STD_LOGIC;
    signal grp_fwd_ntt2_fu_529_ap_ready : STD_LOGIC;
    signal grp_fwd_ntt2_fu_529_a_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fwd_ntt2_fu_529_a_ce0 : STD_LOGIC;
    signal grp_fwd_ntt2_fu_529_a_we0 : STD_LOGIC;
    signal grp_fwd_ntt2_fu_529_a_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fwd_ntt2_fu_529_a_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fwd_ntt2_fu_529_a_ce1 : STD_LOGIC;
    signal grp_fwd_ntt2_fu_529_a_we1 : STD_LOGIC;
    signal grp_fwd_ntt2_fu_529_a_d1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fwd_ntt2_fu_536_ap_start : STD_LOGIC;
    signal grp_fwd_ntt2_fu_536_ap_idle : STD_LOGIC;
    signal grp_fwd_ntt2_fu_536_ap_ready : STD_LOGIC;
    signal grp_fwd_ntt2_fu_536_a_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fwd_ntt2_fu_536_a_ce0 : STD_LOGIC;
    signal grp_fwd_ntt2_fu_536_a_we0 : STD_LOGIC;
    signal grp_fwd_ntt2_fu_536_a_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fwd_ntt2_fu_536_a_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fwd_ntt2_fu_536_a_ce1 : STD_LOGIC;
    signal grp_fwd_ntt2_fu_536_a_we1 : STD_LOGIC;
    signal grp_fwd_ntt2_fu_536_a_d1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fwd_ntt2_fu_543_ap_start : STD_LOGIC;
    signal grp_fwd_ntt2_fu_543_ap_idle : STD_LOGIC;
    signal grp_fwd_ntt2_fu_543_ap_ready : STD_LOGIC;
    signal grp_fwd_ntt2_fu_543_a_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fwd_ntt2_fu_543_a_ce0 : STD_LOGIC;
    signal grp_fwd_ntt2_fu_543_a_we0 : STD_LOGIC;
    signal grp_fwd_ntt2_fu_543_a_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fwd_ntt2_fu_543_a_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fwd_ntt2_fu_543_a_ce1 : STD_LOGIC;
    signal grp_fwd_ntt2_fu_543_a_we1 : STD_LOGIC;
    signal grp_fwd_ntt2_fu_543_a_d1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_mod_r_fu_550_x : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_mod_r_fu_550_ap_return : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_mod_r_fu_550_ap_ce : STD_LOGIC;
    signal grp_rearrange2_fu_555_ap_start : STD_LOGIC;
    signal grp_rearrange2_fu_555_ap_done : STD_LOGIC;
    signal grp_rearrange2_fu_555_ap_idle : STD_LOGIC;
    signal grp_rearrange2_fu_555_ap_ready : STD_LOGIC;
    signal grp_rearrange2_fu_555_a_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_rearrange2_fu_555_a_ce0 : STD_LOGIC;
    signal grp_rearrange2_fu_555_a_we0 : STD_LOGIC;
    signal grp_rearrange2_fu_555_a_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_rearrange2_fu_561_ap_start : STD_LOGIC;
    signal grp_rearrange2_fu_561_ap_done : STD_LOGIC;
    signal grp_rearrange2_fu_561_ap_idle : STD_LOGIC;
    signal grp_rearrange2_fu_561_ap_ready : STD_LOGIC;
    signal grp_rearrange2_fu_561_a_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_rearrange2_fu_561_a_ce0 : STD_LOGIC;
    signal grp_rearrange2_fu_561_a_we0 : STD_LOGIC;
    signal grp_rearrange2_fu_561_a_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_mux_j_i1_phi_fu_377_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_block_pp3_stage0 : BOOLEAN;
    signal ap_phi_mux_j_i3_phi_fu_399_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_block_pp5_stage0 : BOOLEAN;
    signal ap_reg_grp_knuth_yao2_fu_406_ap_start : STD_LOGIC := '0';
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal ap_reg_grp_fwd_ntt2_fu_529_ap_start : STD_LOGIC := '0';
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal ap_reg_grp_fwd_ntt2_fu_536_ap_start : STD_LOGIC := '0';
    signal ap_reg_grp_fwd_ntt2_fu_543_ap_start : STD_LOGIC := '0';
    signal ap_block_pp1_stage0 : BOOLEAN;
    signal ap_block_pp2_stage0 : BOOLEAN;
    signal ap_block_pp4_stage0 : BOOLEAN;
    signal ap_reg_grp_rearrange2_fu_555_ap_start : STD_LOGIC := '0';
    signal ap_CS_fsm_state45 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state45 : signal is "none";
    signal ap_CS_fsm_state46 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state46 : signal is "none";
    signal ap_reg_grp_rearrange2_fu_561_ap_start : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal tmp_i_fu_615_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_i1_94_fu_687_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_i3_99_fu_759_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_trunc_ext_fu_639_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_trunc7_ext_fu_670_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_trunc8_ext_fu_711_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_pp3_stage1 : BOOLEAN;
    signal p_trunc9_ext_fu_742_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_trunc10_ext_fu_783_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_pp5_stage1 : BOOLEAN;
    signal tmp_158_fu_584_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_159_fu_590_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_i_cast_fu_621_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_175_i_cast_fu_625_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_i2_cast_fu_693_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_176_i1_cast_fu_697_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_i4_cast_fu_765_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_176_i2_cast_fu_769_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_173_i_fu_788_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_173_i_fu_788_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_173_i1_fu_794_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_173_i1_fu_794_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_state46_on_subcall_done : BOOLEAN;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (21 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_idle_pp1 : STD_LOGIC;
    signal ap_enable_pp1 : STD_LOGIC;
    signal ap_idle_pp2 : STD_LOGIC;
    signal ap_enable_pp2 : STD_LOGIC;
    signal ap_idle_pp3 : STD_LOGIC;
    signal ap_enable_pp3 : STD_LOGIC;
    signal ap_idle_pp4 : STD_LOGIC;
    signal ap_enable_pp4 : STD_LOGIC;
    signal ap_idle_pp5 : STD_LOGIC;
    signal ap_enable_pp5 : STD_LOGIC;
    signal tmp_173_i1_fu_794_p00 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_173_i1_fu_794_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_173_i_fu_788_p00 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_173_i_fu_788_p10 : STD_LOGIC_VECTOR (31 downto 0);

    component knuth_yao2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        a_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        a_ce0 : OUT STD_LOGIC;
        a_we0 : OUT STD_LOGIC;
        a_d0 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component fwd_ntt2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        a_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        a_ce0 : OUT STD_LOGIC;
        a_we0 : OUT STD_LOGIC;
        a_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        a_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        a_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        a_ce1 : OUT STD_LOGIC;
        a_we1 : OUT STD_LOGIC;
        a_d1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        a_q1 : IN STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component mod_r IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        x : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (14 downto 0);
        ap_ce : IN STD_LOGIC );
    end component;


    component rearrange2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        a_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        a_ce0 : OUT STD_LOGIC;
        a_we0 : OUT STD_LOGIC;
        a_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        a_q0 : IN STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component encdec_mul_mul_167jG IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component RLWE_enc2_e1 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (15 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        address1 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (15 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component RLWE_enc2_encoded_m IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (15 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;



begin
    e1_U : component RLWE_enc2_e1
    generic map (
        DataWidth => 16,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => e1_address0,
        ce0 => e1_ce0,
        we0 => e1_we0,
        d0 => e1_d0,
        q0 => e1_q0,
        address1 => grp_fwd_ntt2_fu_529_a_address1,
        ce1 => e1_ce1,
        we1 => e1_we1,
        d1 => grp_fwd_ntt2_fu_529_a_d1,
        q1 => e1_q1);

    e2_U : component RLWE_enc2_e1
    generic map (
        DataWidth => 16,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => e2_address0,
        ce0 => e2_ce0,
        we0 => e2_we0,
        d0 => e2_d0,
        q0 => e2_q0,
        address1 => grp_fwd_ntt2_fu_536_a_address1,
        ce1 => e2_ce1,
        we1 => e2_we1,
        d1 => grp_fwd_ntt2_fu_536_a_d1,
        q1 => e2_q1);

    e3_U : component RLWE_enc2_e1
    generic map (
        DataWidth => 16,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => e3_address0,
        ce0 => e3_ce0,
        we0 => e3_we0,
        d0 => e3_d0,
        q0 => e3_q0,
        address1 => e3_address1,
        ce1 => e3_ce1,
        we1 => e3_we1,
        d1 => e3_d1,
        q1 => e3_q1);

    encoded_m_U : component RLWE_enc2_encoded_m
    generic map (
        DataWidth => 16,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => encoded_m_address0,
        ce0 => encoded_m_ce0,
        we0 => encoded_m_we0,
        d0 => encoded_m_d0,
        q0 => encoded_m_q0);

    grp_knuth_yao2_fu_406 : component knuth_yao2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_knuth_yao2_fu_406_ap_start,
        ap_done => grp_knuth_yao2_fu_406_ap_done,
        ap_idle => grp_knuth_yao2_fu_406_ap_idle,
        ap_ready => grp_knuth_yao2_fu_406_ap_ready,
        a_address0 => grp_knuth_yao2_fu_406_a_address0,
        a_ce0 => grp_knuth_yao2_fu_406_a_ce0,
        a_we0 => grp_knuth_yao2_fu_406_a_we0,
        a_d0 => grp_knuth_yao2_fu_406_a_d0);

    grp_fwd_ntt2_fu_529 : component fwd_ntt2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_fwd_ntt2_fu_529_ap_start,
        ap_done => grp_fwd_ntt2_fu_529_ap_done,
        ap_idle => grp_fwd_ntt2_fu_529_ap_idle,
        ap_ready => grp_fwd_ntt2_fu_529_ap_ready,
        a_address0 => grp_fwd_ntt2_fu_529_a_address0,
        a_ce0 => grp_fwd_ntt2_fu_529_a_ce0,
        a_we0 => grp_fwd_ntt2_fu_529_a_we0,
        a_d0 => grp_fwd_ntt2_fu_529_a_d0,
        a_q0 => e1_q0,
        a_address1 => grp_fwd_ntt2_fu_529_a_address1,
        a_ce1 => grp_fwd_ntt2_fu_529_a_ce1,
        a_we1 => grp_fwd_ntt2_fu_529_a_we1,
        a_d1 => grp_fwd_ntt2_fu_529_a_d1,
        a_q1 => e1_q1);

    grp_fwd_ntt2_fu_536 : component fwd_ntt2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_fwd_ntt2_fu_536_ap_start,
        ap_done => grp_fwd_ntt2_fu_536_ap_done,
        ap_idle => grp_fwd_ntt2_fu_536_ap_idle,
        ap_ready => grp_fwd_ntt2_fu_536_ap_ready,
        a_address0 => grp_fwd_ntt2_fu_536_a_address0,
        a_ce0 => grp_fwd_ntt2_fu_536_a_ce0,
        a_we0 => grp_fwd_ntt2_fu_536_a_we0,
        a_d0 => grp_fwd_ntt2_fu_536_a_d0,
        a_q0 => e2_q0,
        a_address1 => grp_fwd_ntt2_fu_536_a_address1,
        a_ce1 => grp_fwd_ntt2_fu_536_a_ce1,
        a_we1 => grp_fwd_ntt2_fu_536_a_we1,
        a_d1 => grp_fwd_ntt2_fu_536_a_d1,
        a_q1 => e2_q1);

    grp_fwd_ntt2_fu_543 : component fwd_ntt2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_fwd_ntt2_fu_543_ap_start,
        ap_done => grp_fwd_ntt2_fu_543_ap_done,
        ap_idle => grp_fwd_ntt2_fu_543_ap_idle,
        ap_ready => grp_fwd_ntt2_fu_543_ap_ready,
        a_address0 => grp_fwd_ntt2_fu_543_a_address0,
        a_ce0 => grp_fwd_ntt2_fu_543_a_ce0,
        a_we0 => grp_fwd_ntt2_fu_543_a_we0,
        a_d0 => grp_fwd_ntt2_fu_543_a_d0,
        a_q0 => e3_q0,
        a_address1 => grp_fwd_ntt2_fu_543_a_address1,
        a_ce1 => grp_fwd_ntt2_fu_543_a_ce1,
        a_we1 => grp_fwd_ntt2_fu_543_a_we1,
        a_d1 => grp_fwd_ntt2_fu_543_a_d1,
        a_q1 => e3_q1);

    grp_mod_r_fu_550 : component mod_r
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        x => grp_mod_r_fu_550_x,
        ap_return => grp_mod_r_fu_550_ap_return,
        ap_ce => grp_mod_r_fu_550_ap_ce);

    grp_rearrange2_fu_555 : component rearrange2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_rearrange2_fu_555_ap_start,
        ap_done => grp_rearrange2_fu_555_ap_done,
        ap_idle => grp_rearrange2_fu_555_ap_idle,
        ap_ready => grp_rearrange2_fu_555_ap_ready,
        a_address0 => grp_rearrange2_fu_555_a_address0,
        a_ce0 => grp_rearrange2_fu_555_a_ce0,
        a_we0 => grp_rearrange2_fu_555_a_we0,
        a_d0 => grp_rearrange2_fu_555_a_d0,
        a_q0 => c1_q0);

    grp_rearrange2_fu_561 : component rearrange2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_rearrange2_fu_561_ap_start,
        ap_done => grp_rearrange2_fu_561_ap_done,
        ap_idle => grp_rearrange2_fu_561_ap_idle,
        ap_ready => grp_rearrange2_fu_561_ap_ready,
        a_address0 => grp_rearrange2_fu_561_a_address0,
        a_ce0 => grp_rearrange2_fu_561_a_ce0,
        a_we0 => grp_rearrange2_fu_561_a_we0,
        a_d0 => grp_rearrange2_fu_561_a_d0,
        a_q0 => c2_q0);

    encdec_mul_mul_167jG_U77 : component encdec_mul_mul_167jG
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 32)
    port map (
        din0 => tmp_173_i_fu_788_p0,
        din1 => tmp_173_i_fu_788_p1,
        dout => tmp_173_i_fu_788_p2);

    encdec_mul_mul_167jG_U78 : component encdec_mul_mul_167jG
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 32)
    port map (
        din0 => tmp_173_i1_fu_794_p0,
        din1 => tmp_173_i1_fu_794_p1,
        dout => tmp_173_i1_fu_794_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2))) then 
                    ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state2);
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp1_exit_iter0_state10) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
                elsif (((grp_knuth_yao2_fu_406_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp1_exit_iter0_state10)) then 
                        ap_enable_reg_pp1_iter1 <= (ap_const_logic_1 xor ap_condition_pp1_exit_iter0_state10);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter4 <= ap_enable_reg_pp1_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter5 <= ap_enable_reg_pp1_iter4;
                elsif (((grp_knuth_yao2_fu_406_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
                    ap_enable_reg_pp1_iter5 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp2_exit_iter0_state18) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
                    ap_enable_reg_pp2_iter0 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_state17_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state17))) then 
                    ap_enable_reg_pp2_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp2_exit_iter0_state18)) then 
                        ap_enable_reg_pp2_iter1 <= (ap_const_logic_1 xor ap_condition_pp2_exit_iter0_state18);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter2 <= ap_enable_reg_pp2_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter3 <= ap_enable_reg_pp2_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter4 <= ap_enable_reg_pp2_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter5 <= ap_enable_reg_pp2_iter4;
                elsif (((ap_const_boolean_0 = ap_block_state17_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state17))) then 
                    ap_enable_reg_pp2_iter5 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp3_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp3_exit_iter0_state25) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
                    ap_enable_reg_pp3_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
                    ap_enable_reg_pp3_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp3_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage1))) then
                    if ((ap_const_logic_1 = ap_condition_pp3_exit_iter0_state25)) then 
                        ap_enable_reg_pp3_iter1 <= (ap_const_logic_1 xor ap_condition_pp3_exit_iter0_state25);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter2 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp3_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage1))) then 
                    ap_enable_reg_pp3_iter2 <= ap_enable_reg_pp3_iter1;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
                    ap_enable_reg_pp3_iter2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp4_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp4_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp4_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp4_exit_iter0_state32) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0))) then 
                    ap_enable_reg_pp4_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
                    ap_enable_reg_pp4_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp4_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp4_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp4_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp4_exit_iter0_state32)) then 
                        ap_enable_reg_pp4_iter1 <= (ap_const_logic_1 xor ap_condition_pp4_exit_iter0_state32);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp4_iter1 <= ap_enable_reg_pp4_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp4_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp4_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp4_stage0_subdone)) then 
                    ap_enable_reg_pp4_iter2 <= ap_enable_reg_pp4_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp4_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp4_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp4_stage0_subdone)) then 
                    ap_enable_reg_pp4_iter3 <= ap_enable_reg_pp4_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp4_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp4_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp4_stage0_subdone)) then 
                    ap_enable_reg_pp4_iter4 <= ap_enable_reg_pp4_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp4_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp4_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp4_stage0_subdone)) then 
                    ap_enable_reg_pp4_iter5 <= ap_enable_reg_pp4_iter4;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
                    ap_enable_reg_pp4_iter5 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp5_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp5_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp5_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp5_exit_iter0_state39) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0))) then 
                    ap_enable_reg_pp5_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state38)) then 
                    ap_enable_reg_pp5_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp5_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp5_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp5_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage1))) then
                    if ((ap_const_logic_1 = ap_condition_pp5_exit_iter0_state39)) then 
                        ap_enable_reg_pp5_iter1 <= (ap_const_logic_1 xor ap_condition_pp5_exit_iter0_state39);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp5_iter1 <= ap_enable_reg_pp5_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp5_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp5_iter2 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp5_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage1))) then 
                    ap_enable_reg_pp5_iter2 <= ap_enable_reg_pp5_iter1;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state38)) then 
                    ap_enable_reg_pp5_iter2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_fwd_ntt2_fu_529_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_fwd_ntt2_fu_529_ap_start <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
                    ap_reg_grp_fwd_ntt2_fu_529_ap_start <= ap_const_logic_1;
                elsif ((grp_fwd_ntt2_fu_529_ap_ready = ap_const_logic_1)) then 
                    ap_reg_grp_fwd_ntt2_fu_529_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_fwd_ntt2_fu_536_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_fwd_ntt2_fu_536_ap_start <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
                    ap_reg_grp_fwd_ntt2_fu_536_ap_start <= ap_const_logic_1;
                elsif ((grp_fwd_ntt2_fu_536_ap_ready = ap_const_logic_1)) then 
                    ap_reg_grp_fwd_ntt2_fu_536_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_fwd_ntt2_fu_543_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_fwd_ntt2_fu_543_ap_start <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
                    ap_reg_grp_fwd_ntt2_fu_543_ap_start <= ap_const_logic_1;
                elsif ((grp_fwd_ntt2_fu_543_ap_ready = ap_const_logic_1)) then 
                    ap_reg_grp_fwd_ntt2_fu_543_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_knuth_yao2_fu_406_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_knuth_yao2_fu_406_ap_start <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                    ap_reg_grp_knuth_yao2_fu_406_ap_start <= ap_const_logic_1;
                elsif ((grp_knuth_yao2_fu_406_ap_ready = ap_const_logic_1)) then 
                    ap_reg_grp_knuth_yao2_fu_406_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_rearrange2_fu_555_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_rearrange2_fu_555_ap_start <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
                    ap_reg_grp_rearrange2_fu_555_ap_start <= ap_const_logic_1;
                elsif ((grp_rearrange2_fu_555_ap_ready = ap_const_logic_1)) then 
                    ap_reg_grp_rearrange2_fu_555_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_rearrange2_fu_561_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_rearrange2_fu_561_ap_start <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
                    ap_reg_grp_rearrange2_fu_561_ap_start <= ap_const_logic_1;
                elsif ((grp_rearrange2_fu_561_ap_ready = ap_const_logic_1)) then 
                    ap_reg_grp_rearrange2_fu_561_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_reg_340_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_fu_567_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                i_reg_340 <= i_5_fu_573_p2;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                i_reg_340 <= ap_const_lv9_0;
            end if; 
        end if;
    end process;

    j_i1_reg_373_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
                j_i1_reg_373 <= ap_const_lv9_0;
            elsif (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (exitcond_i1_reg_878 = ap_const_lv1_0))) then 
                j_i1_reg_373 <= j_11_reg_882;
            end if; 
        end if;
    end process;

    j_i2_reg_384_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
                j_i2_reg_384 <= ap_const_lv9_0;
            elsif (((ap_const_boolean_0 = ap_block_pp4_stage0_11001) and (ap_enable_reg_pp4_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (exitcond_i2_fu_716_p2 = ap_const_lv1_0))) then 
                j_i2_reg_384 <= j_12_fu_722_p2;
            end if; 
        end if;
    end process;

    j_i3_reg_395_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state38)) then 
                j_i3_reg_395 <= ap_const_lv9_0;
            elsif (((ap_const_boolean_0 = ap_block_pp5_stage0_11001) and (ap_enable_reg_pp5_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0) and (exitcond_i3_reg_936 = ap_const_lv1_0))) then 
                j_i3_reg_395 <= j_13_reg_940;
            end if; 
        end if;
    end process;

    j_i7_reg_362_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (exitcond_i8_fu_644_p2 = ap_const_lv1_0))) then 
                j_i7_reg_362 <= j_10_fu_650_p2;
            elsif (((ap_const_boolean_0 = ap_block_state17_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state17))) then 
                j_i7_reg_362 <= ap_const_lv9_0;
            end if; 
        end if;
    end process;

    j_i_reg_351_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (exitcond_i_fu_603_p2 = ap_const_lv1_0))) then 
                j_i_reg_351 <= j_fu_609_p2;
            elsif (((grp_knuth_yao2_fu_406_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
                j_i_reg_351 <= ap_const_lv9_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                ap_reg_pp1_iter1_e3_addr_reg_828 <= e3_addr_reg_828;
                ap_reg_pp1_iter1_exitcond_i_reg_819 <= exitcond_i_reg_819;
                exitcond_i_reg_819 <= exitcond_i_fu_603_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp1_stage0_11001)) then
                ap_reg_pp1_iter2_e3_addr_reg_828 <= ap_reg_pp1_iter1_e3_addr_reg_828;
                ap_reg_pp1_iter2_exitcond_i_reg_819 <= ap_reg_pp1_iter1_exitcond_i_reg_819;
                ap_reg_pp1_iter3_e3_addr_reg_828 <= ap_reg_pp1_iter2_e3_addr_reg_828;
                ap_reg_pp1_iter3_exitcond_i_reg_819 <= ap_reg_pp1_iter2_exitcond_i_reg_819;
                ap_reg_pp1_iter4_e3_addr_reg_828 <= ap_reg_pp1_iter3_e3_addr_reg_828;
                ap_reg_pp1_iter4_exitcond_i_reg_819 <= ap_reg_pp1_iter3_exitcond_i_reg_819;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001))) then
                ap_reg_pp2_iter1_exitcond_i8_reg_849 <= exitcond_i8_reg_849;
                    ap_reg_pp2_iter1_tmp_i9_reg_858(8 downto 0) <= tmp_i9_reg_858(8 downto 0);
                exitcond_i8_reg_849 <= exitcond_i8_fu_644_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp2_stage0_11001)) then
                ap_reg_pp2_iter2_exitcond_i8_reg_849 <= ap_reg_pp2_iter1_exitcond_i8_reg_849;
                    ap_reg_pp2_iter2_tmp_i9_reg_858(8 downto 0) <= ap_reg_pp2_iter1_tmp_i9_reg_858(8 downto 0);
                ap_reg_pp2_iter3_exitcond_i8_reg_849 <= ap_reg_pp2_iter2_exitcond_i8_reg_849;
                    ap_reg_pp2_iter3_tmp_i9_reg_858(8 downto 0) <= ap_reg_pp2_iter2_tmp_i9_reg_858(8 downto 0);
                ap_reg_pp2_iter4_exitcond_i8_reg_849 <= ap_reg_pp2_iter3_exitcond_i8_reg_849;
                    ap_reg_pp2_iter4_tmp_i9_reg_858(8 downto 0) <= ap_reg_pp2_iter3_tmp_i9_reg_858(8 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then
                ap_reg_pp3_iter1_c1_addr_3_reg_892 <= c1_addr_3_reg_892;
                ap_reg_pp3_iter1_exitcond_i1_reg_878 <= exitcond_i1_reg_878;
                ap_reg_pp3_iter2_c1_addr_3_reg_892 <= ap_reg_pp3_iter1_c1_addr_3_reg_892;
                ap_reg_pp3_iter2_exitcond_i1_reg_878 <= ap_reg_pp3_iter1_exitcond_i1_reg_878;
                exitcond_i1_reg_878 <= exitcond_i1_fu_675_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp4_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0))) then
                ap_reg_pp4_iter1_exitcond_i2_reg_907 <= exitcond_i2_reg_907;
                    ap_reg_pp4_iter1_tmp_i2_reg_916(8 downto 0) <= tmp_i2_reg_916(8 downto 0);
                exitcond_i2_reg_907 <= exitcond_i2_fu_716_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp4_stage0_11001)) then
                ap_reg_pp4_iter2_exitcond_i2_reg_907 <= ap_reg_pp4_iter1_exitcond_i2_reg_907;
                    ap_reg_pp4_iter2_tmp_i2_reg_916(8 downto 0) <= ap_reg_pp4_iter1_tmp_i2_reg_916(8 downto 0);
                ap_reg_pp4_iter3_exitcond_i2_reg_907 <= ap_reg_pp4_iter2_exitcond_i2_reg_907;
                    ap_reg_pp4_iter3_tmp_i2_reg_916(8 downto 0) <= ap_reg_pp4_iter2_tmp_i2_reg_916(8 downto 0);
                ap_reg_pp4_iter4_exitcond_i2_reg_907 <= ap_reg_pp4_iter3_exitcond_i2_reg_907;
                    ap_reg_pp4_iter4_tmp_i2_reg_916(8 downto 0) <= ap_reg_pp4_iter3_tmp_i2_reg_916(8 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp5_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0))) then
                ap_reg_pp5_iter1_c2_addr_1_reg_950 <= c2_addr_1_reg_950;
                ap_reg_pp5_iter1_exitcond_i3_reg_936 <= exitcond_i3_reg_936;
                ap_reg_pp5_iter2_c2_addr_1_reg_950 <= ap_reg_pp5_iter1_c2_addr_1_reg_950;
                ap_reg_pp5_iter2_exitcond_i3_reg_936 <= ap_reg_pp5_iter1_exitcond_i3_reg_936;
                exitcond_i3_reg_936 <= exitcond_i3_fu_747_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (exitcond_i1_fu_675_p2 = ap_const_lv1_0))) then
                c1_addr_3_reg_892 <= tmp_i1_94_fu_687_p1(8 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp5_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0) and (exitcond_i3_fu_747_p2 = ap_const_lv1_0))) then
                c2_addr_1_reg_950 <= tmp_i3_99_fu_759_p1(8 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (exitcond_i_fu_603_p2 = ap_const_lv1_0))) then
                e3_addr_reg_828 <= tmp_i_fu_615_p1(8 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                exitcond_reg_800 <= exitcond_fu_567_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then
                j_11_reg_882 <= j_11_fu_681_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp5_stage0_11001) and (ap_enable_reg_pp5_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0))) then
                j_13_reg_940 <= j_13_fu_753_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp4_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (exitcond_i2_reg_907 = ap_const_lv1_0))) then
                tmp_173_i1_reg_931 <= tmp_173_i1_fu_794_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (exitcond_i8_reg_849 = ap_const_lv1_0))) then
                tmp_173_i_reg_873 <= tmp_173_i_fu_788_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (exitcond_i_reg_819 = ap_const_lv1_0))) then
                tmp_176_i_reg_839 <= tmp_176_i_fu_629_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage1) and (exitcond_i1_reg_878 = ap_const_lv1_0))) then
                tmp_177_i1_reg_897 <= tmp_177_i1_fu_701_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp5_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage1) and (exitcond_i3_reg_936 = ap_const_lv1_0))) then
                tmp_177_i2_reg_955 <= tmp_177_i2_fu_773_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp4_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (exitcond_i2_fu_716_p2 = ap_const_lv1_0))) then
                    tmp_i2_reg_916(8 downto 0) <= tmp_i2_fu_728_p1(8 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (exitcond_i8_fu_644_p2 = ap_const_lv1_0))) then
                    tmp_i9_reg_858(8 downto 0) <= tmp_i9_fu_656_p1(8 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_fu_567_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                    tmp_reg_809(8 downto 0) <= tmp_fu_579_p1(8 downto 0);
            end if;
        end if;
    end process;
    tmp_reg_809(63 downto 9) <= "0000000000000000000000000000000000000000000000000000000";
    tmp_i9_reg_858(63 downto 9) <= "0000000000000000000000000000000000000000000000000000000";
    ap_reg_pp2_iter1_tmp_i9_reg_858(63 downto 9) <= "0000000000000000000000000000000000000000000000000000000";
    ap_reg_pp2_iter2_tmp_i9_reg_858(63 downto 9) <= "0000000000000000000000000000000000000000000000000000000";
    ap_reg_pp2_iter3_tmp_i9_reg_858(63 downto 9) <= "0000000000000000000000000000000000000000000000000000000";
    ap_reg_pp2_iter4_tmp_i9_reg_858(63 downto 9) <= "0000000000000000000000000000000000000000000000000000000";
    tmp_i2_reg_916(63 downto 9) <= "0000000000000000000000000000000000000000000000000000000";
    ap_reg_pp4_iter1_tmp_i2_reg_916(63 downto 9) <= "0000000000000000000000000000000000000000000000000000000";
    ap_reg_pp4_iter2_tmp_i2_reg_916(63 downto 9) <= "0000000000000000000000000000000000000000000000000000000";
    ap_reg_pp4_iter3_tmp_i2_reg_916(63 downto 9) <= "0000000000000000000000000000000000000000000000000000000";
    ap_reg_pp4_iter4_tmp_i2_reg_916(63 downto 9) <= "0000000000000000000000000000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, exitcond_fu_567_p2, ap_enable_reg_pp0_iter0, exitcond_i_fu_603_p2, ap_enable_reg_pp1_iter0, exitcond_i8_fu_644_p2, ap_enable_reg_pp2_iter0, exitcond_i1_fu_675_p2, ap_enable_reg_pp3_iter0, ap_CS_fsm_pp3_stage1, exitcond_i2_fu_716_p2, ap_enable_reg_pp4_iter0, exitcond_i3_fu_747_p2, ap_enable_reg_pp5_iter0, ap_CS_fsm_pp5_stage1, ap_block_pp0_stage0_subdone, ap_CS_fsm_state9, grp_knuth_yao2_fu_406_ap_done, ap_block_pp1_stage0_subdone, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter4, ap_enable_reg_pp1_iter5, ap_CS_fsm_state17, ap_block_state17_on_subcall_done, ap_block_pp2_stage0_subdone, ap_enable_reg_pp2_iter1, ap_enable_reg_pp2_iter4, ap_enable_reg_pp2_iter5, ap_block_pp3_stage0_subdone, ap_enable_reg_pp3_iter1, ap_block_pp3_stage1_subdone, ap_enable_reg_pp3_iter2, ap_block_pp4_stage0_subdone, ap_enable_reg_pp4_iter1, ap_enable_reg_pp4_iter4, ap_enable_reg_pp4_iter5, ap_block_pp5_stage0_subdone, ap_enable_reg_pp5_iter1, ap_block_pp5_stage1_subdone, ap_enable_reg_pp5_iter2, ap_CS_fsm_state5, ap_CS_fsm_state7, ap_CS_fsm_state46, ap_block_state46_on_subcall_done)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if (not(((exitcond_fu_567_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif (((exitcond_fu_567_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                if (((grp_knuth_yao2_fu_406_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                if (((grp_knuth_yao2_fu_406_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                if (((grp_knuth_yao2_fu_406_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_pp1_stage0 => 
                if ((not(((ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (exitcond_i_fu_603_p2 = ap_const_lv1_1))) and not(((ap_enable_reg_pp1_iter4 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter5 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                elsif ((((ap_enable_reg_pp1_iter4 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter5 = ap_const_logic_1)) or ((ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (exitcond_i_fu_603_p2 = ap_const_lv1_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state16;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                if (((ap_const_boolean_0 = ap_block_state17_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state17))) then
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state17;
                end if;
            when ap_ST_fsm_pp2_stage0 => 
                if ((not(((ap_enable_reg_pp2_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (exitcond_i8_fu_644_p2 = ap_const_lv1_1))) and not(((ap_enable_reg_pp2_iter4 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (ap_enable_reg_pp2_iter5 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                elsif ((((ap_enable_reg_pp2_iter4 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (ap_enable_reg_pp2_iter5 = ap_const_logic_1)) or ((ap_enable_reg_pp2_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (exitcond_i8_fu_644_p2 = ap_const_lv1_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state24;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                end if;
            when ap_ST_fsm_state24 => 
                ap_NS_fsm <= ap_ST_fsm_pp3_stage0;
            when ap_ST_fsm_pp3_stage0 => 
                if ((not(((ap_enable_reg_pp3_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp3_stage0_subdone) and (exitcond_i1_fu_675_p2 = ap_const_lv1_1) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp3_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage1;
                elsif (((ap_enable_reg_pp3_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp3_stage0_subdone) and (exitcond_i1_fu_675_p2 = ap_const_lv1_1) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state31;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage0;
                end if;
            when ap_ST_fsm_pp3_stage1 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp3_stage1_subdone) and (ap_enable_reg_pp3_iter1 = ap_const_logic_0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage1))) and (ap_const_boolean_0 = ap_block_pp3_stage1_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage0;
                elsif (((ap_const_boolean_0 = ap_block_pp3_stage1_subdone) and (ap_enable_reg_pp3_iter1 = ap_const_logic_0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage1))) then
                    ap_NS_fsm <= ap_ST_fsm_state31;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage1;
                end if;
            when ap_ST_fsm_state31 => 
                ap_NS_fsm <= ap_ST_fsm_pp4_stage0;
            when ap_ST_fsm_pp4_stage0 => 
                if ((not(((ap_enable_reg_pp4_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp4_stage0_subdone) and (exitcond_i2_fu_716_p2 = ap_const_lv1_1) and (ap_enable_reg_pp4_iter0 = ap_const_logic_1))) and not(((ap_enable_reg_pp4_iter4 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp4_stage0_subdone) and (ap_enable_reg_pp4_iter5 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp4_stage0;
                elsif ((((ap_enable_reg_pp4_iter4 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp4_stage0_subdone) and (ap_enable_reg_pp4_iter5 = ap_const_logic_1)) or ((ap_enable_reg_pp4_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp4_stage0_subdone) and (exitcond_i2_fu_716_p2 = ap_const_lv1_1) and (ap_enable_reg_pp4_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state38;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp4_stage0;
                end if;
            when ap_ST_fsm_state38 => 
                ap_NS_fsm <= ap_ST_fsm_pp5_stage0;
            when ap_ST_fsm_pp5_stage0 => 
                if ((not(((ap_enable_reg_pp5_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp5_stage0_subdone) and (exitcond_i3_fu_747_p2 = ap_const_lv1_1) and (ap_enable_reg_pp5_iter0 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp5_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp5_stage1;
                elsif (((ap_enable_reg_pp5_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp5_stage0_subdone) and (exitcond_i3_fu_747_p2 = ap_const_lv1_1) and (ap_enable_reg_pp5_iter0 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state45;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp5_stage0;
                end if;
            when ap_ST_fsm_pp5_stage1 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp5_stage1_subdone) and (ap_enable_reg_pp5_iter1 = ap_const_logic_0) and (ap_enable_reg_pp5_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage1))) and (ap_const_boolean_0 = ap_block_pp5_stage1_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp5_stage0;
                elsif (((ap_const_boolean_0 = ap_block_pp5_stage1_subdone) and (ap_enable_reg_pp5_iter1 = ap_const_logic_0) and (ap_enable_reg_pp5_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage1))) then
                    ap_NS_fsm <= ap_ST_fsm_state45;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp5_stage1;
                end if;
            when ap_ST_fsm_state45 => 
                ap_NS_fsm <= ap_ST_fsm_state46;
            when ap_ST_fsm_state46 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state46) and (ap_const_boolean_0 = ap_block_state46_on_subcall_done))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state46;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    a_address0 <= tmp_i9_fu_656_p1(8 - 1 downto 0);

    a_ce0_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001, ap_enable_reg_pp2_iter0)
    begin
        if (((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001))) then 
            a_ce0 <= ap_const_logic_1;
        else 
            a_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_pp1_stage0 <= ap_CS_fsm(8);
    ap_CS_fsm_pp2_stage0 <= ap_CS_fsm(11);
    ap_CS_fsm_pp3_stage0 <= ap_CS_fsm(13);
    ap_CS_fsm_pp3_stage1 <= ap_CS_fsm(14);
    ap_CS_fsm_pp4_stage0 <= ap_CS_fsm(16);
    ap_CS_fsm_pp5_stage0 <= ap_CS_fsm(18);
    ap_CS_fsm_pp5_stage1 <= ap_CS_fsm(19);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state16 <= ap_CS_fsm(9);
    ap_CS_fsm_state17 <= ap_CS_fsm(10);
    ap_CS_fsm_state24 <= ap_CS_fsm(12);
    ap_CS_fsm_state31 <= ap_CS_fsm(15);
    ap_CS_fsm_state38 <= ap_CS_fsm(17);
    ap_CS_fsm_state4 <= ap_CS_fsm(2);
    ap_CS_fsm_state45 <= ap_CS_fsm(20);
    ap_CS_fsm_state46 <= ap_CS_fsm(21);
    ap_CS_fsm_state5 <= ap_CS_fsm(3);
    ap_CS_fsm_state6 <= ap_CS_fsm(4);
    ap_CS_fsm_state7 <= ap_CS_fsm(5);
    ap_CS_fsm_state8 <= ap_CS_fsm(6);
    ap_CS_fsm_state9 <= ap_CS_fsm(7);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp4_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp4_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp4_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp5_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp5_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp5_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp5_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp5_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp5_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp1_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp1_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp1_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp1_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp1_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp1_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state17_on_subcall_done_assign_proc : process(grp_fwd_ntt2_fu_529_ap_done, grp_fwd_ntt2_fu_536_ap_done, grp_fwd_ntt2_fu_543_ap_done)
    begin
                ap_block_state17_on_subcall_done <= ((grp_fwd_ntt2_fu_543_ap_done = ap_const_logic_0) or (grp_fwd_ntt2_fu_536_ap_done = ap_const_logic_0) or (grp_fwd_ntt2_fu_529_ap_done = ap_const_logic_0));
    end process;

        ap_block_state18_pp2_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp2_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp2_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp2_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp2_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state23_pp2_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state25_pp3_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state26_pp3_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state27_pp3_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state28_pp3_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state29_pp3_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state30_pp3_stage1_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state32_pp4_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state33_pp4_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state34_pp4_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state35_pp4_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state36_pp4_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state37_pp4_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state39_pp5_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state40_pp5_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state41_pp5_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state42_pp5_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state43_pp5_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state44_pp5_stage1_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state46_on_subcall_done_assign_proc : process(grp_rearrange2_fu_555_ap_done, grp_rearrange2_fu_561_ap_done)
    begin
                ap_block_state46_on_subcall_done <= ((grp_rearrange2_fu_561_ap_done = ap_const_logic_0) or (grp_rearrange2_fu_555_ap_done = ap_const_logic_0));
    end process;


    ap_condition_pp0_exit_iter0_state2_assign_proc : process(exitcond_fu_567_p2)
    begin
        if ((exitcond_fu_567_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp1_exit_iter0_state10_assign_proc : process(exitcond_i_fu_603_p2)
    begin
        if ((exitcond_i_fu_603_p2 = ap_const_lv1_1)) then 
            ap_condition_pp1_exit_iter0_state10 <= ap_const_logic_1;
        else 
            ap_condition_pp1_exit_iter0_state10 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp2_exit_iter0_state18_assign_proc : process(exitcond_i8_fu_644_p2)
    begin
        if ((exitcond_i8_fu_644_p2 = ap_const_lv1_1)) then 
            ap_condition_pp2_exit_iter0_state18 <= ap_const_logic_1;
        else 
            ap_condition_pp2_exit_iter0_state18 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp3_exit_iter0_state25_assign_proc : process(exitcond_i1_fu_675_p2)
    begin
        if ((exitcond_i1_fu_675_p2 = ap_const_lv1_1)) then 
            ap_condition_pp3_exit_iter0_state25 <= ap_const_logic_1;
        else 
            ap_condition_pp3_exit_iter0_state25 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp4_exit_iter0_state32_assign_proc : process(exitcond_i2_fu_716_p2)
    begin
        if ((exitcond_i2_fu_716_p2 = ap_const_lv1_1)) then 
            ap_condition_pp4_exit_iter0_state32 <= ap_const_logic_1;
        else 
            ap_condition_pp4_exit_iter0_state32 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp5_exit_iter0_state39_assign_proc : process(exitcond_i3_fu_747_p2)
    begin
        if ((exitcond_i3_fu_747_p2 = ap_const_lv1_1)) then 
            ap_condition_pp5_exit_iter0_state39 <= ap_const_logic_1;
        else 
            ap_condition_pp5_exit_iter0_state39 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state46, ap_block_state46_on_subcall_done)
    begin
        if ((((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_const_logic_1 = ap_CS_fsm_state46) and (ap_const_boolean_0 = ap_block_state46_on_subcall_done)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_pp1 <= (ap_idle_pp1 xor ap_const_logic_1);
    ap_enable_pp2 <= (ap_idle_pp2 xor ap_const_logic_1);
    ap_enable_pp3 <= (ap_idle_pp3 xor ap_const_logic_1);
    ap_enable_pp4 <= (ap_idle_pp4 xor ap_const_logic_1);
    ap_enable_pp5 <= (ap_idle_pp5 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp1_assign_proc : process(ap_enable_reg_pp1_iter0, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter2, ap_enable_reg_pp1_iter3, ap_enable_reg_pp1_iter4, ap_enable_reg_pp1_iter5)
    begin
        if (((ap_enable_reg_pp1_iter5 = ap_const_logic_0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_0))) then 
            ap_idle_pp1 <= ap_const_logic_1;
        else 
            ap_idle_pp1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp2_assign_proc : process(ap_enable_reg_pp2_iter0, ap_enable_reg_pp2_iter1, ap_enable_reg_pp2_iter2, ap_enable_reg_pp2_iter3, ap_enable_reg_pp2_iter4, ap_enable_reg_pp2_iter5)
    begin
        if (((ap_enable_reg_pp2_iter5 = ap_const_logic_0) and (ap_enable_reg_pp2_iter4 = ap_const_logic_0) and (ap_enable_reg_pp2_iter3 = ap_const_logic_0) and (ap_enable_reg_pp2_iter2 = ap_const_logic_0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_0))) then 
            ap_idle_pp2 <= ap_const_logic_1;
        else 
            ap_idle_pp2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp3_assign_proc : process(ap_enable_reg_pp3_iter0, ap_enable_reg_pp3_iter1, ap_enable_reg_pp3_iter2)
    begin
        if (((ap_enable_reg_pp3_iter2 = ap_const_logic_0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_0) and (ap_enable_reg_pp3_iter0 = ap_const_logic_0))) then 
            ap_idle_pp3 <= ap_const_logic_1;
        else 
            ap_idle_pp3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp4_assign_proc : process(ap_enable_reg_pp4_iter0, ap_enable_reg_pp4_iter1, ap_enable_reg_pp4_iter2, ap_enable_reg_pp4_iter3, ap_enable_reg_pp4_iter4, ap_enable_reg_pp4_iter5)
    begin
        if (((ap_enable_reg_pp4_iter5 = ap_const_logic_0) and (ap_enable_reg_pp4_iter4 = ap_const_logic_0) and (ap_enable_reg_pp4_iter3 = ap_const_logic_0) and (ap_enable_reg_pp4_iter2 = ap_const_logic_0) and (ap_enable_reg_pp4_iter1 = ap_const_logic_0) and (ap_enable_reg_pp4_iter0 = ap_const_logic_0))) then 
            ap_idle_pp4 <= ap_const_logic_1;
        else 
            ap_idle_pp4 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp5_assign_proc : process(ap_enable_reg_pp5_iter0, ap_enable_reg_pp5_iter1, ap_enable_reg_pp5_iter2)
    begin
        if (((ap_enable_reg_pp5_iter2 = ap_const_logic_0) and (ap_enable_reg_pp5_iter1 = ap_const_logic_0) and (ap_enable_reg_pp5_iter0 = ap_const_logic_0))) then 
            ap_idle_pp5 <= ap_const_logic_1;
        else 
            ap_idle_pp5 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_j_i1_phi_fu_377_p4_assign_proc : process(j_i1_reg_373, exitcond_i1_reg_878, ap_CS_fsm_pp3_stage0, j_11_reg_882, ap_enable_reg_pp3_iter1, ap_block_pp3_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (exitcond_i1_reg_878 = ap_const_lv1_0))) then 
            ap_phi_mux_j_i1_phi_fu_377_p4 <= j_11_reg_882;
        else 
            ap_phi_mux_j_i1_phi_fu_377_p4 <= j_i1_reg_373;
        end if; 
    end process;


    ap_phi_mux_j_i3_phi_fu_399_p4_assign_proc : process(j_i3_reg_395, exitcond_i3_reg_936, ap_CS_fsm_pp5_stage0, j_13_reg_940, ap_enable_reg_pp5_iter1, ap_block_pp5_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp5_stage0) and (ap_enable_reg_pp5_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0) and (exitcond_i3_reg_936 = ap_const_lv1_0))) then 
            ap_phi_mux_j_i3_phi_fu_399_p4 <= j_13_reg_940;
        else 
            ap_phi_mux_j_i3_phi_fu_399_p4 <= j_i3_reg_395;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state46, ap_block_state46_on_subcall_done)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state46) and (ap_const_boolean_0 = ap_block_state46_on_subcall_done))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    c1_address0_assign_proc : process(ap_reg_pp2_iter4_tmp_i9_reg_858, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter0, ap_reg_pp3_iter2_c1_addr_3_reg_892, ap_CS_fsm_pp3_stage1, ap_enable_reg_pp2_iter5, ap_enable_reg_pp3_iter2, grp_rearrange2_fu_555_a_address0, ap_block_pp3_stage0, ap_block_pp2_stage0, ap_CS_fsm_state46, tmp_i1_94_fu_687_p1, ap_block_pp3_stage1)
    begin
        if (((ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage1) and (ap_const_boolean_0 = ap_block_pp3_stage1))) then 
            c1_address0 <= ap_reg_pp3_iter2_c1_addr_3_reg_892;
        elsif (((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
            c1_address0 <= tmp_i1_94_fu_687_p1(8 - 1 downto 0);
        elsif (((ap_enable_reg_pp2_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0))) then 
            c1_address0 <= ap_reg_pp2_iter4_tmp_i9_reg_858(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state46)) then 
            c1_address0 <= grp_rearrange2_fu_555_a_address0;
        else 
            c1_address0 <= "XXXXXXXX";
        end if; 
    end process;


    c1_ce0_assign_proc : process(ap_block_pp2_stage0_11001, ap_CS_fsm_pp3_stage0, ap_block_pp3_stage0_11001, ap_enable_reg_pp3_iter0, ap_CS_fsm_pp3_stage1, ap_block_pp3_stage1_11001, ap_enable_reg_pp2_iter5, ap_enable_reg_pp3_iter2, grp_rearrange2_fu_555_a_ce0, ap_CS_fsm_state46)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp3_stage1_11001) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage1)) or ((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0)) or ((ap_enable_reg_pp2_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001)))) then 
            c1_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state46)) then 
            c1_ce0 <= grp_rearrange2_fu_555_a_ce0;
        else 
            c1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    c1_d0_assign_proc : process(ap_CS_fsm_pp3_stage1, ap_enable_reg_pp2_iter5, ap_enable_reg_pp3_iter2, grp_rearrange2_fu_555_a_d0, ap_block_pp2_stage0, ap_CS_fsm_state46, p_trunc7_ext_fu_670_p1, p_trunc8_ext_fu_711_p1, ap_block_pp3_stage1)
    begin
        if (((ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage1) and (ap_const_boolean_0 = ap_block_pp3_stage1))) then 
            c1_d0 <= p_trunc8_ext_fu_711_p1;
        elsif (((ap_enable_reg_pp2_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0))) then 
            c1_d0 <= p_trunc7_ext_fu_670_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state46)) then 
            c1_d0 <= grp_rearrange2_fu_555_a_d0;
        else 
            c1_d0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    c1_we0_assign_proc : process(ap_block_pp2_stage0_11001, ap_reg_pp2_iter4_exitcond_i8_reg_849, ap_reg_pp3_iter2_exitcond_i1_reg_878, ap_CS_fsm_pp3_stage1, ap_block_pp3_stage1_11001, ap_enable_reg_pp2_iter5, ap_enable_reg_pp3_iter2, grp_rearrange2_fu_555_a_we0, ap_CS_fsm_state46)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp3_stage1_11001) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage1) and (ap_reg_pp3_iter2_exitcond_i1_reg_878 = ap_const_lv1_0)) or ((ap_enable_reg_pp2_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_reg_pp2_iter4_exitcond_i8_reg_849 = ap_const_lv1_0)))) then 
            c1_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state46)) then 
            c1_we0 <= grp_rearrange2_fu_555_a_we0;
        else 
            c1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    c2_address0_assign_proc : process(ap_reg_pp4_iter4_tmp_i2_reg_916, ap_CS_fsm_pp5_stage0, ap_enable_reg_pp5_iter0, ap_reg_pp5_iter2_c2_addr_1_reg_950, ap_CS_fsm_pp5_stage1, ap_enable_reg_pp4_iter5, ap_enable_reg_pp5_iter2, grp_rearrange2_fu_561_a_address0, ap_block_pp5_stage0, ap_block_pp4_stage0, ap_CS_fsm_state46, tmp_i3_99_fu_759_p1, ap_block_pp5_stage1)
    begin
        if (((ap_enable_reg_pp5_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage1) and (ap_const_boolean_0 = ap_block_pp5_stage1))) then 
            c2_address0 <= ap_reg_pp5_iter2_c2_addr_1_reg_950;
        elsif (((ap_const_boolean_0 = ap_block_pp5_stage0) and (ap_enable_reg_pp5_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0))) then 
            c2_address0 <= tmp_i3_99_fu_759_p1(8 - 1 downto 0);
        elsif (((ap_enable_reg_pp4_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp4_stage0))) then 
            c2_address0 <= ap_reg_pp4_iter4_tmp_i2_reg_916(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state46)) then 
            c2_address0 <= grp_rearrange2_fu_561_a_address0;
        else 
            c2_address0 <= "XXXXXXXX";
        end if; 
    end process;


    c2_ce0_assign_proc : process(ap_block_pp4_stage0_11001, ap_CS_fsm_pp5_stage0, ap_block_pp5_stage0_11001, ap_enable_reg_pp5_iter0, ap_CS_fsm_pp5_stage1, ap_block_pp5_stage1_11001, ap_enable_reg_pp4_iter5, ap_enable_reg_pp5_iter2, grp_rearrange2_fu_561_a_ce0, ap_CS_fsm_state46)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp5_stage1_11001) and (ap_enable_reg_pp5_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage1)) or ((ap_const_boolean_0 = ap_block_pp5_stage0_11001) and (ap_enable_reg_pp5_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0)) or ((ap_const_boolean_0 = ap_block_pp4_stage0_11001) and (ap_enable_reg_pp4_iter5 = ap_const_logic_1)))) then 
            c2_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state46)) then 
            c2_ce0 <= grp_rearrange2_fu_561_a_ce0;
        else 
            c2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    c2_d0_assign_proc : process(ap_CS_fsm_pp5_stage1, ap_enable_reg_pp4_iter5, ap_enable_reg_pp5_iter2, grp_rearrange2_fu_561_a_d0, ap_block_pp4_stage0, ap_CS_fsm_state46, p_trunc9_ext_fu_742_p1, p_trunc10_ext_fu_783_p1, ap_block_pp5_stage1)
    begin
        if (((ap_enable_reg_pp5_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage1) and (ap_const_boolean_0 = ap_block_pp5_stage1))) then 
            c2_d0 <= p_trunc10_ext_fu_783_p1;
        elsif (((ap_enable_reg_pp4_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp4_stage0))) then 
            c2_d0 <= p_trunc9_ext_fu_742_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state46)) then 
            c2_d0 <= grp_rearrange2_fu_561_a_d0;
        else 
            c2_d0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    c2_we0_assign_proc : process(ap_block_pp4_stage0_11001, ap_reg_pp4_iter4_exitcond_i2_reg_907, ap_reg_pp5_iter2_exitcond_i3_reg_936, ap_CS_fsm_pp5_stage1, ap_block_pp5_stage1_11001, ap_enable_reg_pp4_iter5, ap_enable_reg_pp5_iter2, grp_rearrange2_fu_561_a_we0, ap_CS_fsm_state46)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp5_stage1_11001) and (ap_enable_reg_pp5_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage1) and (ap_reg_pp5_iter2_exitcond_i3_reg_936 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp4_stage0_11001) and (ap_enable_reg_pp4_iter5 = ap_const_logic_1) and (ap_reg_pp4_iter4_exitcond_i2_reg_907 = ap_const_lv1_0)))) then 
            c2_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state46)) then 
            c2_we0 <= grp_rearrange2_fu_561_a_we0;
        else 
            c2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    e1_address0_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter0, tmp_i9_fu_656_p1, ap_CS_fsm_pp4_stage0, ap_enable_reg_pp4_iter0, tmp_i2_fu_728_p1, ap_CS_fsm_state17, grp_knuth_yao2_fu_406_a_address0, grp_fwd_ntt2_fu_529_a_address0, ap_CS_fsm_state5, ap_block_pp2_stage0, ap_block_pp4_stage0)
    begin
        if (((ap_enable_reg_pp4_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (ap_const_boolean_0 = ap_block_pp4_stage0))) then 
            e1_address0 <= tmp_i2_fu_728_p1(8 - 1 downto 0);
        elsif (((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0))) then 
            e1_address0 <= tmp_i9_fu_656_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            e1_address0 <= grp_fwd_ntt2_fu_529_a_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            e1_address0 <= grp_knuth_yao2_fu_406_a_address0;
        else 
            e1_address0 <= "XXXXXXXX";
        end if; 
    end process;


    e1_ce0_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001, ap_enable_reg_pp2_iter0, ap_CS_fsm_pp4_stage0, ap_block_pp4_stage0_11001, ap_enable_reg_pp4_iter0, ap_CS_fsm_state17, grp_knuth_yao2_fu_406_a_ce0, grp_fwd_ntt2_fu_529_a_ce0, ap_CS_fsm_state5)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp4_stage0_11001) and (ap_enable_reg_pp4_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0)) or ((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001)))) then 
            e1_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            e1_ce0 <= grp_fwd_ntt2_fu_529_a_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            e1_ce0 <= grp_knuth_yao2_fu_406_a_ce0;
        else 
            e1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    e1_ce1_assign_proc : process(ap_CS_fsm_state17, grp_fwd_ntt2_fu_529_a_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            e1_ce1 <= grp_fwd_ntt2_fu_529_a_ce1;
        else 
            e1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    e1_d0_assign_proc : process(ap_CS_fsm_state17, grp_knuth_yao2_fu_406_a_d0, grp_fwd_ntt2_fu_529_a_d0, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            e1_d0 <= grp_fwd_ntt2_fu_529_a_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            e1_d0 <= grp_knuth_yao2_fu_406_a_d0;
        else 
            e1_d0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    e1_we0_assign_proc : process(ap_CS_fsm_state17, grp_knuth_yao2_fu_406_a_we0, grp_fwd_ntt2_fu_529_a_we0, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            e1_we0 <= grp_fwd_ntt2_fu_529_a_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            e1_we0 <= grp_knuth_yao2_fu_406_a_we0;
        else 
            e1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    e1_we1_assign_proc : process(ap_CS_fsm_state17, grp_fwd_ntt2_fu_529_a_we1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            e1_we1 <= grp_fwd_ntt2_fu_529_a_we1;
        else 
            e1_we1 <= ap_const_logic_0;
        end if; 
    end process;


    e2_address0_assign_proc : process(ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter0, ap_CS_fsm_state17, grp_knuth_yao2_fu_406_a_address0, grp_fwd_ntt2_fu_536_a_address0, ap_block_pp3_stage0, ap_CS_fsm_state7, tmp_i1_94_fu_687_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
            e2_address0 <= tmp_i1_94_fu_687_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            e2_address0 <= grp_fwd_ntt2_fu_536_a_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            e2_address0 <= grp_knuth_yao2_fu_406_a_address0;
        else 
            e2_address0 <= "XXXXXXXX";
        end if; 
    end process;


    e2_ce0_assign_proc : process(ap_CS_fsm_pp3_stage0, ap_block_pp3_stage0_11001, ap_enable_reg_pp3_iter0, ap_CS_fsm_state17, grp_knuth_yao2_fu_406_a_ce0, grp_fwd_ntt2_fu_536_a_ce0, ap_CS_fsm_state7)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
            e2_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            e2_ce0 <= grp_fwd_ntt2_fu_536_a_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            e2_ce0 <= grp_knuth_yao2_fu_406_a_ce0;
        else 
            e2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    e2_ce1_assign_proc : process(ap_CS_fsm_state17, grp_fwd_ntt2_fu_536_a_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            e2_ce1 <= grp_fwd_ntt2_fu_536_a_ce1;
        else 
            e2_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    e2_d0_assign_proc : process(ap_CS_fsm_state17, grp_knuth_yao2_fu_406_a_d0, grp_fwd_ntt2_fu_536_a_d0, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            e2_d0 <= grp_fwd_ntt2_fu_536_a_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            e2_d0 <= grp_knuth_yao2_fu_406_a_d0;
        else 
            e2_d0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    e2_we0_assign_proc : process(ap_CS_fsm_state17, grp_knuth_yao2_fu_406_a_we0, grp_fwd_ntt2_fu_536_a_we0, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            e2_we0 <= grp_fwd_ntt2_fu_536_a_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            e2_we0 <= grp_knuth_yao2_fu_406_a_we0;
        else 
            e2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    e2_we1_assign_proc : process(ap_CS_fsm_state17, grp_fwd_ntt2_fu_536_a_we1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            e2_we1 <= grp_fwd_ntt2_fu_536_a_we1;
        else 
            e2_we1 <= ap_const_logic_0;
        end if; 
    end process;


    e3_address0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, ap_CS_fsm_pp5_stage0, ap_enable_reg_pp5_iter0, ap_CS_fsm_state9, ap_CS_fsm_state17, grp_knuth_yao2_fu_406_a_address0, grp_fwd_ntt2_fu_543_a_address0, ap_block_pp5_stage0, ap_block_pp1_stage0, tmp_i_fu_615_p1, tmp_i3_99_fu_759_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp5_stage0) and (ap_enable_reg_pp5_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0))) then 
            e3_address0 <= tmp_i3_99_fu_759_p1(8 - 1 downto 0);
        elsif (((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0))) then 
            e3_address0 <= tmp_i_fu_615_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            e3_address0 <= grp_fwd_ntt2_fu_543_a_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            e3_address0 <= grp_knuth_yao2_fu_406_a_address0;
        else 
            e3_address0 <= "XXXXXXXX";
        end if; 
    end process;


    e3_address1_assign_proc : process(ap_reg_pp1_iter4_e3_addr_reg_828, ap_enable_reg_pp1_iter5, ap_CS_fsm_state17, grp_fwd_ntt2_fu_543_a_address1, ap_block_pp1_stage0)
    begin
        if (((ap_enable_reg_pp1_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0))) then 
            e3_address1 <= ap_reg_pp1_iter4_e3_addr_reg_828;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            e3_address1 <= grp_fwd_ntt2_fu_543_a_address1;
        else 
            e3_address1 <= "XXXXXXXX";
        end if; 
    end process;


    e3_ce0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter0, ap_CS_fsm_pp5_stage0, ap_block_pp5_stage0_11001, ap_enable_reg_pp5_iter0, ap_CS_fsm_state9, ap_CS_fsm_state17, grp_knuth_yao2_fu_406_a_ce0, grp_fwd_ntt2_fu_543_a_ce0)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp5_stage0_11001) and (ap_enable_reg_pp5_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0)) or ((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)))) then 
            e3_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            e3_ce0 <= grp_fwd_ntt2_fu_543_a_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            e3_ce0 <= grp_knuth_yao2_fu_406_a_ce0;
        else 
            e3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    e3_ce1_assign_proc : process(ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter5, ap_CS_fsm_state17, grp_fwd_ntt2_fu_543_a_ce1)
    begin
        if (((ap_enable_reg_pp1_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
            e3_ce1 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            e3_ce1 <= grp_fwd_ntt2_fu_543_a_ce1;
        else 
            e3_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    e3_d0_assign_proc : process(ap_CS_fsm_state9, ap_CS_fsm_state17, grp_knuth_yao2_fu_406_a_d0, grp_fwd_ntt2_fu_543_a_d0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            e3_d0 <= grp_fwd_ntt2_fu_543_a_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            e3_d0 <= grp_knuth_yao2_fu_406_a_d0;
        else 
            e3_d0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    e3_d1_assign_proc : process(ap_enable_reg_pp1_iter5, ap_CS_fsm_state17, grp_fwd_ntt2_fu_543_a_d1, ap_block_pp1_stage0, p_trunc_ext_fu_639_p1)
    begin
        if (((ap_enable_reg_pp1_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0))) then 
            e3_d1 <= p_trunc_ext_fu_639_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            e3_d1 <= grp_fwd_ntt2_fu_543_a_d1;
        else 
            e3_d1 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    e3_we0_assign_proc : process(ap_CS_fsm_state9, ap_CS_fsm_state17, grp_knuth_yao2_fu_406_a_we0, grp_fwd_ntt2_fu_543_a_we0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            e3_we0 <= grp_fwd_ntt2_fu_543_a_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            e3_we0 <= grp_knuth_yao2_fu_406_a_we0;
        else 
            e3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    e3_we1_assign_proc : process(ap_block_pp1_stage0_11001, ap_reg_pp1_iter4_exitcond_i_reg_819, ap_enable_reg_pp1_iter5, ap_CS_fsm_state17, grp_fwd_ntt2_fu_543_a_we1)
    begin
        if (((ap_enable_reg_pp1_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_reg_pp1_iter4_exitcond_i_reg_819 = ap_const_lv1_0))) then 
            e3_we1 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            e3_we1 <= grp_fwd_ntt2_fu_543_a_we1;
        else 
            e3_we1 <= ap_const_logic_0;
        end if; 
    end process;


    encoded_m_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, tmp_reg_809, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, ap_enable_reg_pp0_iter1, ap_block_pp1_stage0, ap_block_pp0_stage0, tmp_i_fu_615_p1)
    begin
        if (((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0))) then 
            encoded_m_address0 <= tmp_i_fu_615_p1(8 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            encoded_m_address0 <= tmp_reg_809(8 - 1 downto 0);
        else 
            encoded_m_address0 <= "XXXXXXXX";
        end if; 
    end process;


    encoded_m_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter0, ap_enable_reg_pp0_iter1)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)))) then 
            encoded_m_ce0 <= ap_const_logic_1;
        else 
            encoded_m_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    encoded_m_d0 <= std_logic_vector(unsigned(tmp_158_fu_584_p2) - unsigned(tmp_159_fu_590_p2));

    encoded_m_we0_assign_proc : process(exitcond_reg_800, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_reg_800 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            encoded_m_we0 <= ap_const_logic_1;
        else 
            encoded_m_we0 <= ap_const_logic_0;
        end if; 
    end process;

    exitcond_fu_567_p2 <= "1" when (i_reg_340 = ap_const_lv9_100) else "0";
    exitcond_i1_fu_675_p2 <= "1" when (ap_phi_mux_j_i1_phi_fu_377_p4 = ap_const_lv9_100) else "0";
    exitcond_i2_fu_716_p2 <= "1" when (j_i2_reg_384 = ap_const_lv9_100) else "0";
    exitcond_i3_fu_747_p2 <= "1" when (ap_phi_mux_j_i3_phi_fu_399_p4 = ap_const_lv9_100) else "0";
    exitcond_i8_fu_644_p2 <= "1" when (j_i7_reg_362 = ap_const_lv9_100) else "0";
    exitcond_i_fu_603_p2 <= "1" when (j_i_reg_351 = ap_const_lv9_100) else "0";
    grp_fwd_ntt2_fu_529_ap_start <= ap_reg_grp_fwd_ntt2_fu_529_ap_start;
    grp_fwd_ntt2_fu_536_ap_start <= ap_reg_grp_fwd_ntt2_fu_536_ap_start;
    grp_fwd_ntt2_fu_543_ap_start <= ap_reg_grp_fwd_ntt2_fu_543_ap_start;
    grp_knuth_yao2_fu_406_ap_start <= ap_reg_grp_knuth_yao2_fu_406_ap_start;

    grp_mod_r_fu_550_ap_ce_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001, ap_CS_fsm_pp3_stage0, ap_block_pp3_stage0_11001, ap_CS_fsm_pp3_stage1, ap_block_pp3_stage1_11001, ap_CS_fsm_pp4_stage0, ap_block_pp4_stage0_11001, ap_CS_fsm_pp5_stage0, ap_block_pp5_stage0_11001, ap_CS_fsm_pp5_stage1, ap_block_pp5_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp5_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage1)) or ((ap_const_boolean_0 = ap_block_pp5_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0)) or ((ap_const_boolean_0 = ap_block_pp4_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0)) or ((ap_const_boolean_0 = ap_block_pp3_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage1)) or ((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0)) or ((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)))) then 
            grp_mod_r_fu_550_ap_ce <= ap_const_logic_1;
        else 
            grp_mod_r_fu_550_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_mod_r_fu_550_x_assign_proc : process(ap_reg_pp1_iter1_exitcond_i_reg_819, tmp_176_i_cast_fu_635_p1, ap_reg_pp2_iter1_exitcond_i8_reg_849, tmp_173_i_reg_873, exitcond_i1_reg_878, ap_CS_fsm_pp3_stage0, tmp_177_i1_cast_fu_707_p1, ap_reg_pp4_iter1_exitcond_i2_reg_907, tmp_173_i1_reg_931, exitcond_i3_reg_936, ap_CS_fsm_pp5_stage0, tmp_177_i2_cast_fu_779_p1, ap_enable_reg_pp1_iter2, ap_enable_reg_pp2_iter2, ap_enable_reg_pp3_iter1, ap_enable_reg_pp4_iter2, ap_enable_reg_pp5_iter1, ap_block_pp3_stage0, ap_block_pp5_stage0, ap_block_pp1_stage0, ap_block_pp2_stage0, ap_block_pp4_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp5_stage0) and (ap_enable_reg_pp5_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0) and (exitcond_i3_reg_936 = ap_const_lv1_0))) then 
            grp_mod_r_fu_550_x <= tmp_177_i2_cast_fu_779_p1;
        elsif (((ap_enable_reg_pp4_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp4_stage0) and (ap_reg_pp4_iter1_exitcond_i2_reg_907 = ap_const_lv1_0))) then 
            grp_mod_r_fu_550_x <= tmp_173_i1_reg_931;
        elsif (((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (exitcond_i1_reg_878 = ap_const_lv1_0))) then 
            grp_mod_r_fu_550_x <= tmp_177_i1_cast_fu_707_p1;
        elsif (((ap_enable_reg_pp2_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_reg_pp2_iter1_exitcond_i8_reg_849 = ap_const_lv1_0))) then 
            grp_mod_r_fu_550_x <= tmp_173_i_reg_873;
        elsif (((ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_reg_pp1_iter1_exitcond_i_reg_819 = ap_const_lv1_0))) then 
            grp_mod_r_fu_550_x <= tmp_176_i_cast_fu_635_p1;
        else 
            grp_mod_r_fu_550_x <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_rearrange2_fu_555_ap_start <= ap_reg_grp_rearrange2_fu_555_ap_start;
    grp_rearrange2_fu_561_ap_start <= ap_reg_grp_rearrange2_fu_561_ap_start;
    i_5_fu_573_p2 <= std_logic_vector(unsigned(i_reg_340) + unsigned(ap_const_lv9_1));
    j_10_fu_650_p2 <= std_logic_vector(unsigned(j_i7_reg_362) + unsigned(ap_const_lv9_1));
    j_11_fu_681_p2 <= std_logic_vector(unsigned(ap_phi_mux_j_i1_phi_fu_377_p4) + unsigned(ap_const_lv9_1));
    j_12_fu_722_p2 <= std_logic_vector(unsigned(j_i2_reg_384) + unsigned(ap_const_lv9_1));
    j_13_fu_753_p2 <= std_logic_vector(unsigned(ap_phi_mux_j_i3_phi_fu_399_p4) + unsigned(ap_const_lv9_1));
    j_fu_609_p2 <= std_logic_vector(unsigned(j_i_reg_351) + unsigned(ap_const_lv9_1));
    m_address0 <= tmp_fu_579_p1(8 - 1 downto 0);

    m_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            m_ce0 <= ap_const_logic_1;
        else 
            m_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    p_address0 <= tmp_i2_fu_728_p1(8 - 1 downto 0);

    p_ce0_assign_proc : process(ap_CS_fsm_pp4_stage0, ap_block_pp4_stage0_11001, ap_enable_reg_pp4_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp4_stage0_11001) and (ap_enable_reg_pp4_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0))) then 
            p_ce0 <= ap_const_logic_1;
        else 
            p_ce0 <= ap_const_logic_0;
        end if; 
    end process;

        p_trunc10_ext_fu_783_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_mod_r_fu_550_ap_return),16));

        p_trunc7_ext_fu_670_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_mod_r_fu_550_ap_return),16));

        p_trunc8_ext_fu_711_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_mod_r_fu_550_ap_return),16));

        p_trunc9_ext_fu_742_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_mod_r_fu_550_ap_return),16));

        p_trunc_ext_fu_639_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_mod_r_fu_550_ap_return),16));

    tmp_158_fu_584_p2 <= std_logic_vector(shift_left(unsigned(m_q0),to_integer(unsigned('0' & ap_const_lv16_C(16-1 downto 0)))));
    tmp_159_fu_590_p2 <= std_logic_vector(shift_left(unsigned(m_q0),to_integer(unsigned('0' & ap_const_lv16_8(16-1 downto 0)))));
    tmp_173_i1_fu_794_p0 <= tmp_173_i1_fu_794_p00(16 - 1 downto 0);
    tmp_173_i1_fu_794_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_q0),32));
    tmp_173_i1_fu_794_p1 <= tmp_173_i1_fu_794_p10(16 - 1 downto 0);
    tmp_173_i1_fu_794_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(e1_q0),32));
    tmp_173_i_fu_788_p0 <= tmp_173_i_fu_788_p00(16 - 1 downto 0);
    tmp_173_i_fu_788_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(a_q0),32));
    tmp_173_i_fu_788_p1 <= tmp_173_i_fu_788_p10(16 - 1 downto 0);
    tmp_173_i_fu_788_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(e1_q0),32));
    tmp_175_i_cast_fu_625_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(encoded_m_q0),17));
    tmp_176_i1_cast_fu_697_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(c1_q0),17));
    tmp_176_i2_cast_fu_769_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(c2_q0),17));
    tmp_176_i_cast_fu_635_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_176_i_reg_839),32));
    tmp_176_i_fu_629_p2 <= std_logic_vector(unsigned(tmp_i_cast_fu_621_p1) + unsigned(tmp_175_i_cast_fu_625_p1));
    tmp_177_i1_cast_fu_707_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_177_i1_reg_897),32));
    tmp_177_i1_fu_701_p2 <= std_logic_vector(unsigned(tmp_i2_cast_fu_693_p1) + unsigned(tmp_176_i1_cast_fu_697_p1));
    tmp_177_i2_cast_fu_779_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_177_i2_reg_955),32));
    tmp_177_i2_fu_773_p2 <= std_logic_vector(unsigned(tmp_i4_cast_fu_765_p1) + unsigned(tmp_176_i2_cast_fu_769_p1));
    tmp_fu_579_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_reg_340),64));
    tmp_i1_94_fu_687_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_j_i1_phi_fu_377_p4),64));
    tmp_i2_cast_fu_693_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(e2_q0),17));
    tmp_i2_fu_728_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j_i2_reg_384),64));
    tmp_i3_99_fu_759_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_j_i3_phi_fu_399_p4),64));
    tmp_i4_cast_fu_765_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(e3_q0),17));
    tmp_i9_fu_656_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j_i7_reg_362),64));
    tmp_i_cast_fu_621_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(e3_q0),17));
    tmp_i_fu_615_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j_i_reg_351),64));
end behav;
